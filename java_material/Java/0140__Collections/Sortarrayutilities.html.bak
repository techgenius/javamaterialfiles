<HTML>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0140__Collections/Sortarrayutilities.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:47 GMT -->
<HEAD><title> Sort array utilities : Array Sort Search&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial </title><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta http-equiv="content-style-type" content="text/css"/><meta name="author" content="Demo Source and Support Ltd."/><meta name="copyright" content="2006 Demo Source and Support Ltd."/><meta name="description" CONTENT=" Sort array utilities : Array Sort Search&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial "/><meta name="keywords" CONTENT=" Sort array utilities : Array Sort Search&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial "/><LINK href="../../../style/techgeniussolutions.css" type=text/css rel=stylesheet><link rel="shortcut icon" href="http://www.techgeniussolutions.com/style/favicon.ico"></HEAD><body><H1>Sort array utilities : Array Sort Search&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial</H1><table width=1024 border=0><tr align=left><td width=140 valign=top align=left><table cellpadding=0 cellspacing=0 class=leftBarTable><tr><td class=leftLangCell><A href="http://www.techgeniussolutions.com/">Home</A></td></tr><tr><td><A href="../CatalogJava.html">Java Tutorial</a></td></tr><tr><td><table class=leftBarFolderTable><tr><td valign=top>1.</td><td><A href="../0020__Language/Catalog0020__Language.html">Language</a></td></tr><tr><td valign=top>2.</td><td><A href="../0040__Data-Type/Catalog0040__Data-Type.html">Data Type</a></td></tr><tr><td valign=top>3.</td><td><A href="../0060__Operators/Catalog0060__Operators.html">Operators</a></td></tr><tr><td valign=top>4.</td><td><A href="../0080__Statement-Control/Catalog0080__Statement-Control.html">Statement Control</a></td></tr><tr><td valign=top>5.</td><td><A href="../0100__Class-Definition/Catalog0100__Class-Definition.html">Class Definition</a></td></tr><tr><td valign=top>6.</td><td><A href="../0120__Development/Catalog0120__Development.html">Development</a></td></tr><tr><td valign=top>7.</td><td><A href="../0125__Reflection/Catalog0125__Reflection.html">Reflection</a></td></tr><tr><td valign=top>8.</td><td><A href="../0130__Regular-Expressions/Catalog0130__Regular-Expressions.html">Regular Expressions</a></td></tr><tr><td valign=top>9.</td><td><B>Collections</B></td></tr><tr><td valign=top>10.</td><td><A href="../0160__Thread/Catalog0160__Thread.html">Thread</a></td></tr><tr><td valign=top>11.</td><td><A href="../0180__File/Catalog0180__File.html">File</a></td></tr><tr><td valign=top>12.</td><td><A href="../0200__Generics/Catalog0200__Generics.html">Generics</a></td></tr><tr><td valign=top>13.</td><td><A href="../0220__I18N/Catalog0220__I18N.html">I18N</a></td></tr><tr><td valign=top>14.</td><td><A href="../0240__Swing/Catalog0240__Swing.html">Swing</a></td></tr><tr><td valign=top>15.</td><td><A href="../0260__Swing-Event/Catalog0260__Swing-Event.html">Swing Event</a></td></tr><tr><td valign=top>16.</td><td><A href="../0261__2D-Graphics/Catalog0261__2D-Graphics.html">2D Graphics</a></td></tr><tr><td valign=top>17.</td><td><A href="../0280__SWT/Catalog0280__SWT.html">SWT</a></td></tr><tr><td valign=top>18.</td><td><A href="../0300__SWT-2D-Graphics/Catalog0300__SWT-2D-Graphics.html">SWT 2D Graphics</a></td></tr><tr><td valign=top>19.</td><td><A href="../0320__Network/Catalog0320__Network.html">Network</a></td></tr><tr><td valign=top>20.</td><td><A href="../0340__Database/Catalog0340__Database.html">Database</a></td></tr><tr><td valign=top>21.</td><td><A href="../0350__Hibernate/Catalog0350__Hibernate.html">Hibernate</a></td></tr><tr><td valign=top>22.</td><td><A href="../0355__JPA/Catalog0355__JPA.html">JPA</a></td></tr><tr><td valign=top>23.</td><td><A href="../0360__JSP/Catalog0360__JSP.html">JSP</a></td></tr><tr><td valign=top>24.</td><td><A href="../0380__JSTL/Catalog0380__JSTL.html">JSTL</a></td></tr><tr><td valign=top>25.</td><td><A href="../0400__Servlet/Catalog0400__Servlet.html">Servlet</a></td></tr><tr><td valign=top>26.</td><td><A href="../0410__Web-Services-SOA/Catalog0410__Web-Services-SOA.html">Web Services SOA</a></td></tr><tr><td valign=top>27.</td><td><A href="../0415__EJB3/Catalog0415__EJB3.html">EJB3</a></td></tr><tr><td valign=top>28.</td><td><A href="../0417__Spring/Catalog0417__Spring.html">Spring</a></td></tr><tr><td valign=top>29.</td><td><A href="../0419__PDF/Catalog0419__PDF.html">PDF</a></td></tr><tr><td valign=top>30.</td><td><A href="../0420__Email/Catalog0420__Email.html">Email</a></td></tr><tr><td valign=top>31.</td><td><A href="../0430__J2ME/Catalog0430__J2ME.html">J2ME</a></td></tr><tr><td valign=top>32.</td><td><A href="../0440__J2EE-Application/Catalog0440__J2EE-Application.html">J2EE Application</a></td></tr><tr><td valign=top>33.</td><td><A href="../0440__XML/Catalog0440__XML.html">XML</a></td></tr><tr><td valign=top>34.</td><td><A href="../0460__Design-Pattern/Catalog0460__Design-Pattern.html">Design Pattern</a></td></tr><tr><td valign=top>35.</td><td><A href="../0480__Log/Catalog0480__Log.html">Log</a></td></tr><tr><td valign=top>36.</td><td><A href="../0490__Security/Catalog0490__Security.html">Security</a></td></tr><tr><td valign=top>37.</td><td><A href="../0500__Apache-Common/Catalog0500__Apache-Common.html">Apache Common</a></td></tr><tr><td valign=top>38.</td><td><A href="../0520__Ant/Catalog0520__Ant.html">Ant</a></td></tr><tr><td valign=top>39.</td><td><A href="../0540__JUnit/Catalog0540__JUnit.html">JUnit</a></td></tr></table></td></tr></table></td><td width=2px></td><td valign=top><TABLE class=googleBar width=800 cellSpacing=0 cellPadding=0 border=0><TBODY><TR><TD width=60%><A href="../CatalogJava.html">Java Tutorial</a>&nbsp;&raquo;&nbsp;<A href="Catalog0140__Collections.html">Collections</a>&nbsp;&raquo;&nbsp;<A href="0140__Array-Sort-Search.html">Array Sort Search</a></TD><TD align=right width=10%>&nbsp;</TD><TD align=right height=80% width=30%><form action="http://www.google.com/cse" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="15" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script></TD></FORM> </TD></TR></TBODY></TABLE><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed.html";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><table width=800 border=0><tr><td class=codeTitle>9.8.19.Sort array utilities<span style='font-SIZE:80%;float:right'><a href='FastQSortsthelrpartitioninclusiveofthespecfiedarrayofRowsusingthecomparator.html'>Previous</a>/<a href='Howtosortanarray.html'>Next</a></td></tr><tr><td><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
</td></tr><tr><td><table border="0" cellpadding="3" cellspacing="0" bgcolor="#ffffff">
   <tr>
<td nowrap="nowrap" valign="top" align="left"><div class="codeShade"><code><font color="#3f7f5f">/*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Copyright&nbsp;2004,&nbsp;2005,&nbsp;2006&nbsp;Odysseus&nbsp;Software&nbsp;GmbH</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&#34;License&#34;);</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&#34;AS&nbsp;IS&#34;&nbsp;BASIS,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*/&nbsp;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.Arrays;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.Comparator;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.Iterator;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.List;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Utility&nbsp;class&nbsp;providing&nbsp;some&nbsp;useful&nbsp;static&nbsp;sort&nbsp;methods.&nbsp;The&nbsp;sort&nbsp;routines</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;all&nbsp;return&nbsp;index&nbsp;permutations&nbsp;p&nbsp;such&nbsp;that&nbsp;data[p[0]],..,data[p[data.length-1]]</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;is&nbsp;in&nbsp;sorted&nbsp;order.&nbsp;The&nbsp;data&nbsp;array&nbsp;itself&nbsp;is&nbsp;not&nbsp;modified.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;To&nbsp;actually&nbsp;rearrange&nbsp;the&nbsp;array&nbsp;elements,&nbsp;the&nbsp;inverse&nbsp;of&nbsp;p&nbsp;can&nbsp;be&nbsp;used&nbsp;to</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;permute&nbsp;the&nbsp;array,&nbsp;such&nbsp;that&nbsp;data[0],..,data[data.length-1]&nbsp;is&nbsp;in&nbsp;sorted</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;order.&nbsp;Use&nbsp;&lt;code&gt;getIterator(p,&nbsp;data)&lt;/code&gt;&nbsp;to&nbsp;iterate&nbsp;in&nbsp;sorted&nbsp;order.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;A&nbsp;code&nbsp;example&nbsp;may&nbsp;show&nbsp;you&nbsp;what&nbsp;to&nbsp;do&nbsp;next:</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;pre&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;String[]&nbsp;colors&nbsp;=&nbsp;{&nbsp;&#34;red&#34;,&nbsp;&#34;green&#34;,&nbsp;&#34;blue&#34;&nbsp;};</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;int[]&nbsp;p&nbsp;=&nbsp;SortUtils.sort(colors,&nbsp;new&nbsp;StringComparator());</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;//&nbsp;--&gt;&nbsp;(colors[p[0]],&nbsp;colors[p[1]],&nbsp;colors[p[2]])&nbsp;==&nbsp;(&#34;blue&#34;,&#34;green&#34;,&#34;red&#34;)</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Iterator&nbsp;iter&nbsp;=&nbsp;SortUtils.getIterator(p,&nbsp;colors)</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;//&nbsp;--&gt;&nbsp;(iter.next(),&nbsp;iter.next(),&nbsp;iter.next())&nbsp;==&nbsp;(&#34;blue&#34;,&#34;green&#34;,&#34;red&#34;)</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;SortUtils.permute(SortUtils.inverse(p),&nbsp;colors,&nbsp;true);</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;//&nbsp;--&gt;&nbsp;(colors[0],&nbsp;colors[1],&nbsp;colors[2])&nbsp;==&nbsp;(&#34;blue&#34;,&#34;green&#34;,&#34;red&#34;)</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;/pre&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Stable&nbsp;sorts&nbsp;(preserving&nbsp;order&nbsp;of&nbsp;equal&nbsp;elements)&nbsp;are&nbsp;supported.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Sorting&nbsp;is&nbsp;done&nbsp;using&nbsp;quick-sort&nbsp;mith&nbsp;median&nbsp;of&nbsp;3&nbsp;(and&nbsp;insertion-sort</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;for&nbsp;small&nbsp;ranges).</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@author&nbsp;</font><font color="#3f5fbf">Christoph&nbsp;Beck</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>public&nbsp;class&nbsp;</b></font><font color="#000000">SortUtils&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Helper&nbsp;class&nbsp;used&nbsp;to&nbsp;perform&nbsp;quicksort.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@author&nbsp;</font><font color="#3f5fbf">Christoph&nbsp;Beck</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>static&nbsp;final&nbsp;class&nbsp;</b></font><font color="#000000">QuickSorter&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;static&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">INSERTIONSORT_THRESHOLD&nbsp;=&nbsp;</font><font color="#990000">7</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;final&nbsp;</b></font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">QuickSorter</font><font color="#000000">(</font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.data&nbsp;=&nbsp;data;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">compare</font><font color="#000000">(</font><font color="#000000">Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">j</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">result&nbsp;=&nbsp;cmp.compare</font><font color="#000000">(</font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]</font><font color="#000000">,&nbsp;data</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">])</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">result&nbsp;==&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">&amp;&amp;&nbsp;stable&nbsp;&amp;&amp;&nbsp;i&nbsp;!=&nbsp;j</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">result&nbsp;=&nbsp;i&nbsp;&lt;&nbsp;j&nbsp;?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">result;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">med3</font><font color="#000000">(</font><font color="#000000">Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">a,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">b,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">c</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;&nbsp;</b></font><font color="#000000">(</font><font color="#000000">compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;false,&nbsp;a,&nbsp;b</font><font color="#000000">)&nbsp;</font><font color="#000000">&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#000000">compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;false,&nbsp;b,&nbsp;c</font><font color="#000000">)&nbsp;</font><font color="#000000">&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;b&nbsp;:&nbsp;compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;false,&nbsp;a,&nbsp;c</font><font color="#000000">)&nbsp;</font><font color="#000000">&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;c&nbsp;:&nbsp;a</font><font color="#000000">)&nbsp;</font><font color="#000000">:</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#000000">compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;false,&nbsp;b,&nbsp;c</font><font color="#000000">)&nbsp;</font><font color="#000000">&gt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;b&nbsp;:&nbsp;compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;false,&nbsp;a,&nbsp;c</font><font color="#000000">)&nbsp;</font><font color="#000000">&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;c&nbsp;:&nbsp;a</font><font color="#000000">))</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">pivot</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">lo,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">hi</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">med3</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;indices</font><font color="#000000">[</font><font color="#000000">lo&nbsp;+&nbsp;</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">,&nbsp;indices</font><font color="#000000">[(</font><font color="#000000">lo&nbsp;+&nbsp;hi</font><font color="#000000">)&nbsp;</font><font color="#000000">/&nbsp;</font><font color="#990000">2</font><font color="#000000">]</font><font color="#000000">,&nbsp;indices</font><font color="#000000">[</font><font color="#000000">hi&nbsp;-&nbsp;</font><font color="#990000">1</font><font color="#000000">])</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">swap</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">j</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">tmp&nbsp;=&nbsp;indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;indices</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;tmp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">insertionSort</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">lo,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">hi</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;lo;&nbsp;i&nbsp;&lt;=&nbsp;hi;&nbsp;i++</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">j&nbsp;=&nbsp;i;&nbsp;j&nbsp;&gt;&nbsp;lo&nbsp;&amp;&amp;&nbsp;compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;stable,&nbsp;indices</font><font color="#000000">[</font><font color="#000000">j-</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">,&nbsp;indices</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">])&nbsp;</font><font color="#000000">&gt;&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;j--</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">swap</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;j-</font><font color="#990000">1</font><font color="#000000">,&nbsp;j</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">quickSort</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">lo0,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">hi0</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">pivot&nbsp;=&nbsp;pivot</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;lo0,&nbsp;hi0</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">lo&nbsp;=&nbsp;lo0,&nbsp;hi&nbsp;=&nbsp;hi0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>while&nbsp;</b></font><font color="#000000">(</font><font color="#000000">lo&nbsp;&lt;=&nbsp;hi</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>while&nbsp;</b></font><font color="#000000">(</font><font color="#000000">lo&nbsp;&lt;&nbsp;hi0&nbsp;&amp;&amp;&nbsp;compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;stable,&nbsp;pivot,&nbsp;indices</font><font color="#000000">[</font><font color="#000000">lo</font><font color="#000000">])&nbsp;</font><font color="#000000">&gt;&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">++lo;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>while&nbsp;</b></font><font color="#000000">(</font><font color="#000000">hi&nbsp;&gt;&nbsp;lo0&nbsp;&amp;&amp;&nbsp;compare</font><font color="#000000">(</font><font color="#000000">cmp,&nbsp;stable,&nbsp;pivot,&nbsp;indices</font><font color="#000000">[</font><font color="#000000">hi</font><font color="#000000">])&nbsp;</font><font color="#000000">&lt;&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">--hi;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">lo&nbsp;&lt;=&nbsp;hi</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">swap</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;lo++,&nbsp;hi--</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;stable,&nbsp;lo0,&nbsp;hi</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;stable,&nbsp;lo,&nbsp;hi0</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">sort</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">lo,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">hi</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">hi&nbsp;-&nbsp;lo&nbsp;&lt;&nbsp;INSERTIONSORT_THRESHOLD</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">insertionSort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;stable,&nbsp;lo,&nbsp;hi</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">quickSort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;stable,&nbsp;lo,&nbsp;hi</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">sort</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;stable,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;indices.length&nbsp;-&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">Comparator&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices&nbsp;=&nbsp;identity</font><font color="#000000">(</font><font color="#000000">data.length</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;cmp,&nbsp;stable</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">indices;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Create&nbsp;identity&nbsp;permutation,&nbsp;that&nbsp;is&nbsp;&lt;code&gt;{0,&nbsp;1,&nbsp;...,&nbsp;n}&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">identity</font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">n</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[</font><font color="#000000">n</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;i;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">indices;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Create&nbsp;reverse&nbsp;permutation,&nbsp;that&nbsp;is&nbsp;&lt;code&gt;{n-1,&nbsp;....&nbsp;1,&nbsp;0}&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">reverse</font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">n</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[</font><font color="#000000">n</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;n&nbsp;-&nbsp;i&nbsp;-&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">indices;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Compute&nbsp;inverse&nbsp;permutation</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">inverse</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">p</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">pi&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[</font><font color="#000000">p.length</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;pi.length;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">pi</font><font color="#000000">[</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]]&nbsp;</font><font color="#000000">=&nbsp;i;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">pi;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Rearrange&nbsp;the&nbsp;specified&nbsp;data&nbsp;according&nbsp;to&nbsp;the&nbsp;specified&nbsp;permutation.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;That&nbsp;is,&nbsp;the&nbsp;array&nbsp;is&nbsp;rearranged,&nbsp;such&nbsp;that</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;data_after[p[i]]&nbsp;==&nbsp;data_before[i]&lt;/code&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">data&nbsp;data&nbsp;to&nbsp;be&nbsp;permuted</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">p&nbsp;the&nbsp;permutation</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">clone&nbsp;if&nbsp;true,&nbsp;rearrange&nbsp;a&nbsp;clone&nbsp;instead&nbsp;of&nbsp;the&nbsp;original&nbsp;data;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">the&nbsp;permuted&nbsp;array&nbsp;(which&nbsp;is&nbsp;the&nbsp;original&nbsp;reference&nbsp;if&nbsp;clone&nbsp;==&nbsp;false)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">permute</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">p,&nbsp;Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">clone</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">permuted&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">clone</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">permuted&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">Object</font><font color="#000000">[])</font><font color="#000000">data.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;data.length;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">permuted</font><font color="#000000">[</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]]&nbsp;</font><font color="#000000">=&nbsp;data</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;run&nbsp;thru&nbsp;cycles</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>while&nbsp;</b></font><font color="#000000">(</font><font color="#000000">i&nbsp;&lt;&nbsp;p.length</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">||&nbsp;p</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">==&nbsp;i</font><font color="#000000">)&nbsp;</font><font color="#3f7f5f">//&nbsp;skip&nbsp;already&nbsp;handled&nbsp;and&nbsp;cycles&nbsp;of&nbsp;length&nbsp;1</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">++i;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{&nbsp;</font><font color="#3f7f5f">//&nbsp;start&nbsp;a&nbsp;new&nbsp;cycle</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">j&nbsp;=&nbsp;p</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Object&nbsp;save&nbsp;=&nbsp;data</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>while&nbsp;</b></font><font color="#000000">(</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">]&nbsp;</font><font color="#000000">&gt;=&nbsp;</font><font color="#990000">0</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Object&nbsp;tmp&nbsp;=&nbsp;data</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;save;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">save&nbsp;=&nbsp;tmp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">i&nbsp;=&nbsp;j;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">j&nbsp;=&nbsp;p</font><font color="#000000">[</font><font color="#000000">j</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;-</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">permuted&nbsp;=&nbsp;data;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">permuted;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answer&nbsp;iterator,&nbsp;which&nbsp;iterates&nbsp;over&nbsp;specified&nbsp;data&nbsp;array&nbsp;according</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;to&nbsp;the&nbsp;specified&nbsp;permutation,&nbsp;that&nbsp;is</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;data[p[0]],..,data[p[data.length-1]]&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Iterator&nbsp;getIterator</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">p,&nbsp;</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Iterator</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">pos&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">hasNext</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">pos&nbsp;&lt;&nbsp;data.length;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Object&nbsp;next</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">pos++</font><font color="#000000">]]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">remove</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">UnsupportedOperationException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Cannot&nbsp;remove&nbsp;from&nbsp;immutable&nbsp;iterator!&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answer&nbsp;iterator,&nbsp;which&nbsp;iterates&nbsp;over&nbsp;specified&nbsp;data&nbsp;list&nbsp;according</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;to&nbsp;the&nbsp;specified&nbsp;permutation,&nbsp;that&nbsp;is</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;data.get(p[0]),..,data.get(p[data.length-1])&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Iterator&nbsp;getIterator</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">p,&nbsp;</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">List&nbsp;data</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Iterator</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">pos&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">hasNext</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">pos&nbsp;&lt;&nbsp;data.size</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Object&nbsp;next</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">data.get</font><font color="#000000">(</font><font color="#000000">p</font><font color="#000000">[</font><font color="#000000">pos++</font><font color="#000000">])</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">remove</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">UnsupportedOperationException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Cannot&nbsp;remove&nbsp;from&nbsp;immutable&nbsp;iterator!&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;/**</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*&nbsp;An&nbsp;improved&nbsp;heap&nbsp;builder.</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*&nbsp;Assumes&nbsp;children&nbsp;of&nbsp;i&nbsp;at&nbsp;2i&nbsp;and&nbsp;2i+1&nbsp;(requires&nbsp;i&gt;0)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*/</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;cheap(int[]&nbsp;indices,&nbsp;Object[]&nbsp;data,&nbsp;Comparator&nbsp;comparator,&nbsp;int&nbsp;i,&nbsp;int&nbsp;j)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;k&nbsp;=&nbsp;(i&nbsp;&lt;&lt;&nbsp;1);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(k&nbsp;&gt;&nbsp;j)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(k&nbsp;&lt;&nbsp;j)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(comparator.compare(data[indices[k]],&nbsp;data[indices[k&nbsp;+&nbsp;1]])&nbsp;&lt;&nbsp;0)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k++;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&lt;&lt;=&nbsp;1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(k&nbsp;&gt;&nbsp;j)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&gt;&gt;=&nbsp;1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(comparator.compare(data[indices[k]],&nbsp;data[indices[i]])&nbsp;&lt;&nbsp;0)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&gt;&gt;=&nbsp;1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;t1&nbsp;=&nbsp;indices[i],&nbsp;t2;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(k&nbsp;&gt;&nbsp;i)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2&nbsp;=&nbsp;indices[k];</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[k]&nbsp;=&nbsp;t1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&gt;&gt;=&nbsp;1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1&nbsp;=&nbsp;indices[k];</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[k]&nbsp;=&nbsp;t2;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&gt;&gt;=&nbsp;1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(k&nbsp;==&nbsp;i)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[i]&nbsp;=&nbsp;t1;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;/**</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*&nbsp;Do&nbsp;a&nbsp;(clever)&nbsp;heapsort.</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;comparator&nbsp;Comparator&nbsp;object&nbsp;specifying&nbsp;the&nbsp;sort&nbsp;order.</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*/</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;cheapSort(int[]&nbsp;indices,&nbsp;Object[]&nbsp;data,&nbsp;Comparator&nbsp;comparator)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;n&nbsp;=&nbsp;data.length;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(n&nbsp;&gt;&nbsp;1)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;m&nbsp;=&nbsp;0;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(comparator.compare(data[indices[i]],&nbsp;data[indices[m]])&nbsp;&lt;&nbsp;0)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;i;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(m&nbsp;&gt;&nbsp;0)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;t&nbsp;=&nbsp;indices[0];</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[0]&nbsp;=&nbsp;indices[m];</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[m]&nbsp;=&nbsp;t;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(n&nbsp;&gt;&nbsp;2)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;n&nbsp;/&nbsp;2;&nbsp;i&nbsp;&gt;&nbsp;1;&nbsp;i--)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cheap(indices,&nbsp;data,&nbsp;comparator,&nbsp;i,&nbsp;n&nbsp;-&nbsp;1);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;n&nbsp;-&nbsp;1;&nbsp;i&nbsp;&gt;&nbsp;1;&nbsp;i--)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cheap(indices,&nbsp;data,&nbsp;comparator,&nbsp;1,&nbsp;i);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;t&nbsp;=&nbsp;indices[1];</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[1]&nbsp;=&nbsp;indices[i];</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indices[i]&nbsp;=&nbsp;t;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;}</font><br/>
<font color="#3f7f5f">//</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;/**</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*&nbsp;Perform&nbsp;a&nbsp;cheapsort</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;*/</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;public&nbsp;static&nbsp;int[]&nbsp;cheapSort(Object[]&nbsp;data,&nbsp;Comparator&nbsp;comparator)&nbsp;{</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;int[]&nbsp;indices&nbsp;=&nbsp;identity(data.length);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;cheapSort(indices,&nbsp;data,&nbsp;comparator);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;indices;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Do&nbsp;a&nbsp;sort&nbsp;on&nbsp;indices.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">data&nbsp;data&nbsp;to&nbsp;be&nbsp;sorted</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">comparator&nbsp;comparator&nbsp;to&nbsp;use</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">stable&nbsp;do&nbsp;a&nbsp;stable&nbsp;sort&nbsp;iff&nbsp;true</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">indices&nbsp;into&nbsp;data&nbsp;(any&nbsp;permutation&nbsp;of&nbsp;0,..data.length-1).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">sort</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data,&nbsp;Comparator&nbsp;comparator,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">QuickSorter</font><font color="#000000">(</font><font color="#000000">data</font><font color="#000000">)</font><font color="#000000">.sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;comparator,&nbsp;stable</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Do&nbsp;a&nbsp;sort&nbsp;on&nbsp;indices.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">data&nbsp;data&nbsp;to&nbsp;be&nbsp;sorted</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">comparator&nbsp;comparator&nbsp;to&nbsp;use</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">stable&nbsp;do&nbsp;a&nbsp;stable&nbsp;sort&nbsp;iff&nbsp;true</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">permutation&nbsp;p&nbsp;such&nbsp;that&nbsp;data[p[0]],..,data[p[data.length-1]]&nbsp;is&nbsp;in&nbsp;sorted&nbsp;order</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data,&nbsp;Comparator&nbsp;comparator,&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">stable</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices&nbsp;=&nbsp;identity</font><font color="#000000">(</font><font color="#000000">data.length</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;data,&nbsp;comparator,&nbsp;stable</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">indices;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Do&nbsp;an&nbsp;unstable&nbsp;sort.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">data&nbsp;data&nbsp;to&nbsp;be&nbsp;sorted</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">comparator&nbsp;comparator&nbsp;to&nbsp;use</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">permutation&nbsp;p&nbsp;such&nbsp;that&nbsp;data[p[0]],..,data[p[data.length-1]]&nbsp;is&nbsp;in&nbsp;sorted&nbsp;order</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data,&nbsp;Comparator&nbsp;comparator</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">data,&nbsp;comparator,&nbsp;</font><font color="#7f0055"><b>false</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Do&nbsp;an&nbsp;unstable&nbsp;sort.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">data&nbsp;data&nbsp;to&nbsp;be&nbsp;sorted</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">indices&nbsp;into&nbsp;data&nbsp;(permutation&nbsp;of&nbsp;0,..data.length-1).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">sort</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices,&nbsp;Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data,&nbsp;Comparator&nbsp;comparator</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;data,&nbsp;comparator,&nbsp;</font><font color="#7f0055"><b>false</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Test&nbsp;method</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">main</font><font color="#000000">(</font><font color="#000000">String</font><font color="#000000">[]&nbsp;</font><font color="#000000">args</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Comparator&nbsp;cmp&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Comparator</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">compare</font><font color="#000000">(</font><font color="#000000">Object&nbsp;o1,&nbsp;Object&nbsp;o2</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">((</font><font color="#000000">Comparable</font><font color="#000000">)</font><font color="#000000">o1</font><font color="#000000">)</font><font color="#000000">.compareTo</font><font color="#000000">(</font><font color="#000000">o2</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">n&nbsp;=&nbsp;</font><font color="#990000">1000000</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">args.length&nbsp;==&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>try&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">n&nbsp;=&nbsp;Integer.parseInt</font><font color="#000000">(</font><font color="#000000">args</font><font color="#000000">[</font><font color="#990000">0</font><font color="#000000">])</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>catch&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Exception&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.err.println</font><font color="#000000">(</font><font color="#000000">e</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.println</font><font color="#000000">(</font><font color="#2a00ff">&#34;Generating&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;n&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;&nbsp;random&nbsp;integers...&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">java.util.Random&nbsp;random&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">java.util.Random</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Integer</font><font color="#000000">[]&nbsp;</font><font color="#000000">data&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Integer</font><font color="#000000">[</font><font color="#000000">n</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Integer</font><font color="#000000">(</font><font color="#000000">Math.abs</font><font color="#000000">(</font><font color="#000000">random.nextInt</font><font color="#000000">()))</font><font color="#000000">;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[i]&nbsp;=&nbsp;new&nbsp;Integer(i);</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">indices;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>long&nbsp;</b></font><font color="#000000">time;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.print</font><font color="#000000">(</font><font color="#2a00ff">&#34;Arrays.sort...&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">time&nbsp;=&nbsp;System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Integer</font><font color="#000000">[]&nbsp;</font><font color="#000000">clone&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">Integer</font><font color="#000000">[])</font><font color="#000000">data.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Arrays.sort</font><font color="#000000">(</font><font color="#000000">clone,&nbsp;cmp</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.println</font><font color="#000000">(</font><font color="#000000">System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">-time&nbsp;&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;ms&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.print</font><font color="#000000">(</font><font color="#2a00ff">&#34;quicksort...&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">indices&nbsp;=&nbsp;identity</font><font color="#000000">(</font><font color="#000000">n</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">time&nbsp;=&nbsp;System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;data,&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>false</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.println</font><font color="#000000">(</font><font color="#000000">System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">-time&nbsp;&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;ms&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">1</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">cmp.compare</font><font color="#000000">(</font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i-</font><font color="#990000">1</font><font color="#000000">]]</font><font color="#000000">,&nbsp;data</font><font color="#000000">[</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]])&nbsp;</font><font color="#000000">&gt;&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.err.println</font><font color="#000000">(</font><font color="#2a00ff">&#34;proplem:&nbsp;quickSort&nbsp;at&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.print</font><font color="#000000">(</font><font color="#2a00ff">&#34;quicksort&nbsp;stable...&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;indices&nbsp;=&nbsp;identity(n);</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">time&nbsp;=&nbsp;System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sort</font><font color="#000000">(</font><font color="#000000">indices,&nbsp;data,&nbsp;cmp,&nbsp;</font><font color="#7f0055"><b>true</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.println</font><font color="#000000">(</font><font color="#000000">System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">-time&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;ms&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">1</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">res&nbsp;=&nbsp;cmp.compare</font><font color="#000000">(</font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i-</font><font color="#990000">1</font><font color="#000000">]]</font><font color="#000000">,&nbsp;data</font><font color="#000000">[</font><font color="#000000">indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]])</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">res&nbsp;&gt;&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.err.println</font><font color="#000000">(</font><font color="#2a00ff">&#34;proplem:&nbsp;quickSort&nbsp;stable&nbsp;at&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">res&nbsp;==&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">&amp;&amp;&nbsp;indices</font><font color="#000000">[</font><font color="#000000">i-</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">&gt;&nbsp;indices</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">])</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.err.println</font><font color="#000000">(</font><font color="#2a00ff">&#34;proplem:&nbsp;quickSort&nbsp;stable&nbsp;(not&nbsp;stable)&nbsp;at&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(&#34;cheapsort...&#34;);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;time&nbsp;=&nbsp;System.currentTimeMillis();</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;indices&nbsp;=&nbsp;cheapSort(data,&nbsp;cmp);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(System.currentTimeMillis()-time&nbsp;+&nbsp;&#34;ms&#34;);</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(cmp.compare(data[indices[i-1]],&nbsp;data[indices[i]])&nbsp;&gt;&nbsp;0)</font><br/>
<font color="#3f7f5f">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.err.println(&#34;proplem:&nbsp;cheapSort&nbsp;at&nbsp;&#34;&nbsp;+&nbsp;i);</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.print</font><font color="#000000">(</font><font color="#2a00ff">&#34;permutate&nbsp;copy...&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">time&nbsp;=&nbsp;System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Object</font><font color="#000000">[]&nbsp;</font><font color="#000000">data_copy&nbsp;=&nbsp;permute</font><font color="#000000">(</font><font color="#000000">inverse</font><font color="#000000">(</font><font color="#000000">indices</font><font color="#000000">)</font><font color="#000000">,&nbsp;data,&nbsp;</font><font color="#7f0055"><b>true</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.println</font><font color="#000000">(</font><font color="#000000">System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">-time&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;ms&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">1</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">cmp.compare</font><font color="#000000">(</font><font color="#000000">data_copy</font><font color="#000000">[</font><font color="#000000">i-</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">,&nbsp;data_copy</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">])&nbsp;</font><font color="#000000">&gt;&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.err.println</font><font color="#000000">(</font><font color="#2a00ff">&#34;proplem:&nbsp;permute&nbsp;copy&nbsp;at&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.print</font><font color="#000000">(</font><font color="#2a00ff">&#34;permutate&nbsp;original...&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">time&nbsp;=&nbsp;System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">permute</font><font color="#000000">(</font><font color="#000000">inverse</font><font color="#000000">(</font><font color="#000000">indices</font><font color="#000000">)</font><font color="#000000">,&nbsp;data,&nbsp;</font><font color="#7f0055"><b>false</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.out.println</font><font color="#000000">(</font><font color="#000000">System.currentTimeMillis</font><font color="#000000">()</font><font color="#000000">-time&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;ms&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">1</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">cmp.compare</font><font color="#000000">(</font><font color="#000000">data</font><font color="#000000">[</font><font color="#000000">i-</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">,&nbsp;data</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">])&nbsp;</font><font color="#000000">&gt;&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.err.println</font><font color="#000000">(</font><font color="#2a00ff">&#34;proplem:&nbsp;permute&nbsp;original&nbsp;at&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#000000">}</font></code></div></td>   </tr>
</table>
</td></tr></table><div style='margin-left:10px;'><TABLE width="650"  border=0 cellSpacing=0 cellPadding=0 border=0><TBODY>
<TR><TD align=left><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></TD>
<td align=right><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></td></TR></TBODY></TABLE></div><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
<table cellpadding=0 cellspacing=0 width=800 border=0><tr><td colSpan=5>9.8.Array Sort Search</td></tr><tr class=odd><td width=20></td><td width=100>9.8.1.</td><td  align=left><A href="SortingArrays.html">Sorting Arrays</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.2.</td><td  align=left><A href="Sortingasubsetofarrayelements.html">Sorting a subset of array elements</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.3.</td><td  align=left><A href="Sortingarraysofobjects.html">Sorting arrays of objects</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.4.</td><td  align=left><A href="ObjectArraysSearchingforelementsinasortedobjectarray.html">Object Arrays: Searching for elements in a sorted object array</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.5.</td><td  align=left><A href="SearchingArrays.html">Searching Arrays</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.6.</td><td  align=left><A href="Findstheindexofthegivenobjectinthearraystartingatthegivenindex.html">Finds the index of the given object in the array starting at the given index.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.7.</td><td  align=left><A href="Findstheindexofthegivenobjectinthearray.html">Finds the index of the given object in the array.</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.8.</td><td  align=left><A href="Findsthelastindexofthegivenobjectinthearraystartingatthegivenindex.html">Finds the last index of the given object in the array starting at the given index.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.9.</td><td  align=left><A href="Findsthevalueintherangestartlimitofthelargestelementrankwherethecountofallsmallerelementsinthatrangeislessthanorequalstarget.html">Finds the value in the range (start,limit) of the largest element (rank) where the count of all smaller elements in that range is less than or equals target.</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.10.</td><td  align=left><A href="Returnsanindexintoarraor1wherethecharacterisnotinthecharsetbytearray.html">Returns an index into arra (or -1) where the character is not in the charset byte array.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.11.</td><td  align=left><A href="Returnsanintarrayoflengthsegmentscontainingthedistributioncountoftheelementsinunsortedintarraywithvaluesbetweenminandmaxrange.html">Returns an int[] array of length segments containing the distribution count of the elements in unsorted int[] array with values between min and max (range).</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.12.</td><td  align=left><A href="Returnstheminimumvalueinanarray.html">Returns the minimum value in an array.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.13.</td><td  align=left><A href="Returnstrueifallthereferencesinarray1areequaltoallthereferencesinarray2twonullreferencesareconsideredequalforthistest.html">Returns true if all the references in array1 are equal to all the references in array2 (two null references are considered equal for this test).</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.14.</td><td  align=left><A href="Gettheelementindexorlastindexamongabooleantypearray.html">Get the element index or last index among a boolean type array</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.15.</td><td  align=left><A href="Producesanewarraycontainingtheelementsbetweenthestartandendindices.html">Produces a new array containing the elements between the start and end indices.</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.16.</td><td  align=left><A href="Testtheequalityoftwoobjectarrays.html">Test the equality of two object arrays</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.17.</td><td  align=left><A href="Gettheindexandlastindexofaninttypevaluearray.html">Get the index and last index of an int type value array</a></td></tr><tr class=even><td width=20></td><td width=100>9.8.18.</td><td  align=left><A href="FastQSortsthelrpartitioninclusiveofthespecfiedarrayofRowsusingthecomparator.html">FastQSorts the [l,r] partition (inclusive) of the specfied array of Rows, using the comparator.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.8.19.</td><td  align=left>Sort array utilities</td></tr></table><TABLE border=0><TR><TD height=10></TD></TR></TABLE>
</td></tr></table></td></tr></table><center><TABLE border=0><TR align=left><TD><A href="http://www.techgeniussolutions.com/">techgeniussolutions.com</A>  &nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/contact.htm>Contact Us</A>&nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/ad.htm>Privacy Policy</A></Td></TR><TR align=left><TD class=Templatetext>Copyright 2009 - 12 Demo Source and Support. All rights reserved.</TD></TR><TR align=left><TD>All other trademarks are property of their respective owners.</TD></TR></TABLE></center></BODY>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0140__Collections/Sortarrayutilities.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:47 GMT -->
</HTML>