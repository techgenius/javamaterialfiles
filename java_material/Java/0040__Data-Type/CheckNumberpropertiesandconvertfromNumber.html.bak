<HTML>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0040__Data-Type/CheckNumberpropertiesandconvertfromNumber.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:34 GMT -->
<HEAD><title> Check Number properties and convert from Number : Number&nbsp;&laquo;&nbsp;Data Type&nbsp;&laquo;&nbsp;Java Tutorial </title><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta http-equiv="content-style-type" content="text/css"/><meta name="author" content="Demo Source and Support Ltd."/><meta name="copyright" content="2006 Demo Source and Support Ltd."/><meta name="description" CONTENT=" Check Number properties and convert from Number : Number&nbsp;&laquo;&nbsp;Data Type&nbsp;&laquo;&nbsp;Java Tutorial "/><meta name="keywords" CONTENT=" Check Number properties and convert from Number : Number&nbsp;&laquo;&nbsp;Data Type&nbsp;&laquo;&nbsp;Java Tutorial "/><LINK href="../../../style/techgeniussolutions.css" type=text/css rel=stylesheet><link rel="shortcut icon" href="http://www.techgeniussolutions.com/style/favicon.ico"></HEAD><body><H1>Check Number properties and convert from Number : Number&nbsp;&laquo;&nbsp;Data Type&nbsp;&laquo;&nbsp;Java Tutorial</H1><table width=1024 border=0><tr align=left><td width=140 valign=top align=left><table cellpadding=0 cellspacing=0 class=leftBarTable><tr><td class=leftLangCell><A href="http://www.techgeniussolutions.com/">Home</A></td></tr><tr><td><A href="../CatalogJava.html">Java Tutorial</a></td></tr><tr><td><table class=leftBarFolderTable><tr><td valign=top>1.</td><td><A href="../0020__Language/Catalog0020__Language.html">Language</a></td></tr><tr><td valign=top>2.</td><td><B>Data Type</B></td></tr><tr><td valign=top>3.</td><td><A href="../0060__Operators/Catalog0060__Operators.html">Operators</a></td></tr><tr><td valign=top>4.</td><td><A href="../0080__Statement-Control/Catalog0080__Statement-Control.html">Statement Control</a></td></tr><tr><td valign=top>5.</td><td><A href="../0100__Class-Definition/Catalog0100__Class-Definition.html">Class Definition</a></td></tr><tr><td valign=top>6.</td><td><A href="../0120__Development/Catalog0120__Development.html">Development</a></td></tr><tr><td valign=top>7.</td><td><A href="../0125__Reflection/Catalog0125__Reflection.html">Reflection</a></td></tr><tr><td valign=top>8.</td><td><A href="../0130__Regular-Expressions/Catalog0130__Regular-Expressions.html">Regular Expressions</a></td></tr><tr><td valign=top>9.</td><td><A href="../0140__Collections/Catalog0140__Collections.html">Collections</a></td></tr><tr><td valign=top>10.</td><td><A href="../0160__Thread/Catalog0160__Thread.html">Thread</a></td></tr><tr><td valign=top>11.</td><td><A href="../0180__File/Catalog0180__File.html">File</a></td></tr><tr><td valign=top>12.</td><td><A href="../0200__Generics/Catalog0200__Generics.html">Generics</a></td></tr><tr><td valign=top>13.</td><td><A href="../0220__I18N/Catalog0220__I18N.html">I18N</a></td></tr><tr><td valign=top>14.</td><td><A href="../0240__Swing/Catalog0240__Swing.html">Swing</a></td></tr><tr><td valign=top>15.</td><td><A href="../0260__Swing-Event/Catalog0260__Swing-Event.html">Swing Event</a></td></tr><tr><td valign=top>16.</td><td><A href="../0261__2D-Graphics/Catalog0261__2D-Graphics.html">2D Graphics</a></td></tr><tr><td valign=top>17.</td><td><A href="../0280__SWT/Catalog0280__SWT.html">SWT</a></td></tr><tr><td valign=top>18.</td><td><A href="../0300__SWT-2D-Graphics/Catalog0300__SWT-2D-Graphics.html">SWT 2D Graphics</a></td></tr><tr><td valign=top>19.</td><td><A href="../0320__Network/Catalog0320__Network.html">Network</a></td></tr><tr><td valign=top>20.</td><td><A href="../0340__Database/Catalog0340__Database.html">Database</a></td></tr><tr><td valign=top>21.</td><td><A href="../0350__Hibernate/Catalog0350__Hibernate.html">Hibernate</a></td></tr><tr><td valign=top>22.</td><td><A href="../0355__JPA/Catalog0355__JPA.html">JPA</a></td></tr><tr><td valign=top>23.</td><td><A href="../0360__JSP/Catalog0360__JSP.html">JSP</a></td></tr><tr><td valign=top>24.</td><td><A href="../0380__JSTL/Catalog0380__JSTL.html">JSTL</a></td></tr><tr><td valign=top>25.</td><td><A href="../0400__Servlet/Catalog0400__Servlet.html">Servlet</a></td></tr><tr><td valign=top>26.</td><td><A href="../0410__Web-Services-SOA/Catalog0410__Web-Services-SOA.html">Web Services SOA</a></td></tr><tr><td valign=top>27.</td><td><A href="../0415__EJB3/Catalog0415__EJB3.html">EJB3</a></td></tr><tr><td valign=top>28.</td><td><A href="../0417__Spring/Catalog0417__Spring.html">Spring</a></td></tr><tr><td valign=top>29.</td><td><A href="../0419__PDF/Catalog0419__PDF.html">PDF</a></td></tr><tr><td valign=top>30.</td><td><A href="../0420__Email/Catalog0420__Email.html">Email</a></td></tr><tr><td valign=top>31.</td><td><A href="../0430__J2ME/Catalog0430__J2ME.html">J2ME</a></td></tr><tr><td valign=top>32.</td><td><A href="../0440__J2EE-Application/Catalog0440__J2EE-Application.html">J2EE Application</a></td></tr><tr><td valign=top>33.</td><td><A href="../0440__XML/Catalog0440__XML.html">XML</a></td></tr><tr><td valign=top>34.</td><td><A href="../0460__Design-Pattern/Catalog0460__Design-Pattern.html">Design Pattern</a></td></tr><tr><td valign=top>35.</td><td><A href="../0480__Log/Catalog0480__Log.html">Log</a></td></tr><tr><td valign=top>36.</td><td><A href="../0490__Security/Catalog0490__Security.html">Security</a></td></tr><tr><td valign=top>37.</td><td><A href="../0500__Apache-Common/Catalog0500__Apache-Common.html">Apache Common</a></td></tr><tr><td valign=top>38.</td><td><A href="../0520__Ant/Catalog0520__Ant.html">Ant</a></td></tr><tr><td valign=top>39.</td><td><A href="../0540__JUnit/Catalog0540__JUnit.html">JUnit</a></td></tr></table></td></tr></table></td><td width=2px></td><td valign=top><TABLE class=googleBar width=800 cellSpacing=0 cellPadding=0 border=0><TBODY><TR><TD width=60%><A href="../CatalogJava.html">Java Tutorial</a>&nbsp;&raquo;&nbsp;<A href="Catalog0040__Data-Type.html">Data Type</a>&nbsp;&raquo;&nbsp;<A href="0210__Number.html">Number</a></TD><TD align=right width=10%>&nbsp;</TD><TD align=right height=80% width=30%><form action="http://www.google.com/cse" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="15" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script></TD></FORM> </TD></TR></TBODY></TABLE><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed.html";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><table width=800 border=0><tr><td class=codeTitle>2.13.1.Check Number properties and convert from Number<span style='font-SIZE:80%;float:right'><a href='Readdoublevaluefromconsoleandchecktheformat.html'>Previous</a>/<a href='TurnsastringvalueintoajavalangNumber.html'>Next</a></td></tr><tr><td><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
</td></tr><tr><td><table border="0" cellpadding="3" cellspacing="0" bgcolor="#ffffff">
   <tr>
<td nowrap="nowrap" valign="top" align="left"><div class="codeShade"><code><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Copyright&nbsp;2004,&nbsp;2005,&nbsp;2006&nbsp;Odysseus&nbsp;Software&nbsp;GmbH</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&#34;License&#34;);</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&#34;AS&nbsp;IS&#34;&nbsp;BASIS,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/&nbsp;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.math.BigDecimal;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.math.BigInteger;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Number&nbsp;utilities.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Allows&nbsp;to&nbsp;convert&nbsp;between&nbsp;different&nbsp;&lt;code&gt;java.lang.Number&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;implementations&nbsp;with&nbsp;a&nbsp;minimum&nbsp;of&nbsp;lost&nbsp;information&nbsp;regarding&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;value&nbsp;of&nbsp;the&nbsp;represented&nbsp;number.&nbsp;Additionally,&nbsp;a&nbsp;few&nbsp;number&nbsp;tests</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;are&nbsp;implemented&nbsp;and&nbsp;exact&nbsp;comparisons&nbsp;of&nbsp;arbitrary&nbsp;numbers&nbsp;may&nbsp;be</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;performed.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;NOTE:&nbsp;Though&nbsp;some&nbsp;of&nbsp;the&nbsp;methods&nbsp;may&nbsp;give&nbsp;more&nbsp;or&nbsp;less&nbsp;useful&nbsp;results</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;for&nbsp;custom&nbsp;number&nbsp;implementations,&nbsp;they&nbsp;are&nbsp;intended&nbsp;to&nbsp;work&nbsp;only</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;with&nbsp;the&nbsp;predefined&nbsp;types&nbsp;(i.e.,&nbsp;&lt;code&gt;Byte,&nbsp;Short,&nbsp;Integer,&nbsp;Long,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Float,&nbsp;Double,&nbsp;BigInteger,&nbsp;BigDecimal&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@author&nbsp;</font><font color="#3f5fbf">Oliver&nbsp;Stuhr</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>public&nbsp;class&nbsp;</b></font><font color="#000000">NumberUtils&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answers&nbsp;&lt;code&gt;true&lt;/code&gt;&nbsp;iff&nbsp;the&nbsp;given&nbsp;number&nbsp;is&nbsp;an&nbsp;instance&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;java.math.BigDecimal&lt;/code&gt;&nbsp;or&nbsp;&lt;code&gt;java.math.BigInteger&lt;/code&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">boolean</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isBig</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigDecimal&nbsp;||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigInteger;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answers&nbsp;&lt;code&gt;true&lt;/code&gt;&nbsp;iff&nbsp;the&nbsp;given&nbsp;number&nbsp;is&nbsp;an&nbsp;instance&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;Byte&lt;/code&gt;,&nbsp;&lt;code&gt;Short&lt;/code&gt;,&nbsp;&lt;code&gt;Integer&lt;/code&gt;&nbsp;or&nbsp;&lt;code&gt;Long&lt;/code&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">boolean</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isLongCompatible</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Byte&nbsp;||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Short&nbsp;||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Integer&nbsp;||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Long;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answers&nbsp;&lt;code&gt;true&lt;/code&gt;&nbsp;iff&nbsp;the&nbsp;given&nbsp;number&nbsp;is&nbsp;an&nbsp;instance&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;Float&lt;/code&gt;&nbsp;or&nbsp;&lt;code&gt;Double&lt;/code&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">boolean</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isDoubleCompatible</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Float&nbsp;||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Double;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answers&nbsp;&lt;code&gt;true&lt;/code&gt;&nbsp;iff&nbsp;the&nbsp;given&nbsp;number&nbsp;is&nbsp;infinite&nbsp;(i.e.,&nbsp;is</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;a&nbsp;&lt;code&gt;Float&lt;/code&gt;&nbsp;or&nbsp;&lt;code&gt;Double&lt;/code&gt;&nbsp;containing&nbsp;one&nbsp;of&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;predefined&nbsp;constant&nbsp;values&nbsp;representing&nbsp;positive&nbsp;or&nbsp;negative&nbsp;infinity).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">boolean</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isInfinite</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Double&nbsp;&amp;&amp;&nbsp;</font><font color="#000000">((</font><font color="#000000">Double</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.isInfinite</font><font color="#000000">())</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Float&nbsp;&amp;&amp;&nbsp;</font><font color="#000000">((</font><font color="#000000">Float</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.isInfinite</font><font color="#000000">())</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answers&nbsp;&lt;code&gt;true&lt;/code&gt;&nbsp;iff&nbsp;the&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;(i.e.,&nbsp;is&nbsp;a&nbsp;&lt;code&gt;Float&lt;/code&gt;&nbsp;or&nbsp;&lt;code&gt;Double&lt;/code&gt;&nbsp;containing</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;one&nbsp;of&nbsp;the&nbsp;predefined&nbsp;constant&nbsp;values&nbsp;representing&nbsp;&lt;code&gt;NaN&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">boolean</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Double&nbsp;&amp;&amp;&nbsp;</font><font color="#000000">((</font><font color="#000000">Double</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.isNaN</font><font color="#000000">())</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Float&nbsp;&amp;&amp;&nbsp;</font><font color="#000000">((</font><font color="#000000">Float</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.isNaN</font><font color="#000000">())</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Answers&nbsp;the&nbsp;signum&nbsp;function&nbsp;of&nbsp;the&nbsp;given&nbsp;number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;(i.e.,&nbsp;&lt;code&gt;-1&lt;/code&gt;&nbsp;if&nbsp;it&nbsp;is&nbsp;negative,&nbsp;&lt;code&gt;0&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;if&nbsp;it&nbsp;is&nbsp;zero&nbsp;and&nbsp;&lt;code&gt;1&lt;/code&gt;&nbsp;if&nbsp;it&nbsp;is&nbsp;positive).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">int</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">ArithmeticException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;&lt;code&gt;null&lt;/code&gt;&nbsp;or&nbsp;'not&nbsp;a&nbsp;number'.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">signum</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">ArithmeticException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">ArithmeticException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;null&nbsp;or&nbsp;NaN.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isLongCompatible</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>long&nbsp;</b></font><font color="#000000">value&nbsp;=&nbsp;number.longValue</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">value&nbsp;&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;value&nbsp;==&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigInteger</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">((</font><font color="#000000">BigInteger</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.signum</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;&nbsp;&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">((</font><font color="#000000">BigDecimal</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.signum</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;=&gt;&nbsp;isDoubleCompatible(number)&nbsp;or&nbsp;unknown&nbsp;Number&nbsp;type</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">value&nbsp;=&nbsp;number.doubleValue</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">value&nbsp;&lt;&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;value&nbsp;==&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">?&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;Byte&lt;/code&gt;&nbsp;(by&nbsp;using&nbsp;&lt;code&gt;byteValue()&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.lang.Byte</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IllegalArgumentException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'&nbsp;or&nbsp;infinite.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Byte&nbsp;toByte</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IllegalArgumentException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Byte</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Byte</font><font color="#000000">)</font><font color="#000000">number;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isInfinite</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalArgumentException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;NaN&nbsp;or&nbsp;infinite.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Byte</font><font color="#000000">(</font><font color="#000000">number.byteValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;Short&lt;/code&gt;&nbsp;(by&nbsp;using&nbsp;&lt;code&gt;shortValue()&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.lang.Short</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IllegalArgumentException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'&nbsp;or&nbsp;infinite.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Short&nbsp;toShort</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IllegalArgumentException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Short</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Short</font><font color="#000000">)</font><font color="#000000">number;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isInfinite</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalArgumentException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;NaN&nbsp;or&nbsp;infinite.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Short</font><font color="#000000">(</font><font color="#000000">number.shortValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;Integer&lt;/code&gt;&nbsp;(by&nbsp;using&nbsp;&lt;code&gt;intValue()&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.lang.Integer</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IllegalArgumentException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'&nbsp;or&nbsp;infinite.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Integer&nbsp;toInteger</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IllegalArgumentException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Integer</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Integer</font><font color="#000000">)</font><font color="#000000">number;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isInfinite</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalArgumentException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;NaN&nbsp;or&nbsp;infinite.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Integer</font><font color="#000000">(</font><font color="#000000">number.intValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;Long&lt;/code&gt;&nbsp;(by&nbsp;using&nbsp;&lt;code&gt;longValue()&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.lang.Long</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IllegalArgumentException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'&nbsp;or&nbsp;infinite.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Long&nbsp;toLong</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IllegalArgumentException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Long</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Long</font><font color="#000000">)</font><font color="#000000">number;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isInfinite</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalArgumentException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;NaN&nbsp;or&nbsp;infinite.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Long</font><font color="#000000">(</font><font color="#000000">number.longValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;Float&lt;/code&gt;&nbsp;(by&nbsp;using&nbsp;&lt;code&gt;floatValue()&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.lang.Float</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Float&nbsp;toFloat</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Float&nbsp;?&nbsp;</font><font color="#000000">(</font><font color="#000000">Float</font><font color="#000000">)</font><font color="#000000">number&nbsp;:&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Float</font><font color="#000000">(</font><font color="#000000">number.floatValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;Double&lt;/code&gt;&nbsp;(by&nbsp;using&nbsp;&lt;code&gt;doubleValue()&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.lang.Double</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">Double&nbsp;toDouble</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">Double&nbsp;?&nbsp;</font><font color="#000000">(</font><font color="#000000">Double</font><font color="#000000">)</font><font color="#000000">number&nbsp;:&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Double</font><font color="#000000">(</font><font color="#000000">number.doubleValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;java.math.BigInteger&lt;/code&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.math.BigInteger</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IllegalArgumentException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'&nbsp;or&nbsp;infinite.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">BigInteger&nbsp;toBigInteger</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IllegalArgumentException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigInteger</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">BigInteger</font><font color="#000000">)</font><font color="#000000">number;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">((</font><font color="#000000">BigDecimal</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">.toBigInteger</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isDoubleCompatible</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isInfinite</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalArgumentException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;NaN&nbsp;or&nbsp;infinite.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">(</font><font color="#000000">number.toString</font><font color="#000000">())</font><font color="#000000">.toBigInteger</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#3f7f5f">//&nbsp;=&gt;&nbsp;isLongCompatible(number)&nbsp;or&nbsp;unknown&nbsp;Number&nbsp;type</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">BigInteger.valueOf</font><font color="#000000">(</font><font color="#000000">number.longValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Converts&nbsp;the&nbsp;given&nbsp;number&nbsp;to&nbsp;a&nbsp;&lt;code&gt;java.math.BigDecimal&lt;/code&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">number</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">java.math.BigDecimal</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IllegalArgumentException&nbsp;The&nbsp;given&nbsp;number&nbsp;is&nbsp;'not&nbsp;a&nbsp;number'&nbsp;or&nbsp;infinite.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">BigDecimal&nbsp;toBigDecimal</font><font color="#000000">(</font><font color="#000000">Number&nbsp;number</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IllegalArgumentException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">BigDecimal</font><font color="#000000">)</font><font color="#000000">number;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">number&nbsp;</font><font color="#7f0055"><b>instanceof&nbsp;</b></font><font color="#000000">BigInteger</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">((</font><font color="#000000">BigInteger</font><font color="#000000">)</font><font color="#000000">number</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isDoubleCompatible</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isNaN</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isInfinite</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalArgumentException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Argument&nbsp;must&nbsp;not&nbsp;be&nbsp;NaN&nbsp;or&nbsp;infinite.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">(</font><font color="#000000">number.toString</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isLongCompatible</font><font color="#000000">(</font><font color="#000000">number</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">BigDecimal.valueOf</font><font color="#000000">(</font><font color="#000000">number.longValue</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;=&gt;&nbsp;unknown&nbsp;Number&nbsp;type</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">BigDecimal</font><font color="#000000">(</font><font color="#000000">String.valueOf</font><font color="#000000">(</font><font color="#000000">number.doubleValue</font><font color="#000000">()))</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Compares&nbsp;the&nbsp;first&nbsp;number&nbsp;to&nbsp;the&nbsp;second&nbsp;one&nbsp;numerically&nbsp;and&nbsp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;returns&nbsp;an&nbsp;integer&nbsp;depending&nbsp;on&nbsp;the&nbsp;comparison&nbsp;result:</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;a&nbsp;negative&nbsp;value&nbsp;if&nbsp;the&nbsp;first&nbsp;number&nbsp;is&nbsp;the&nbsp;smaller&nbsp;one,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;a&nbsp;zero&nbsp;value&nbsp;if&nbsp;they&nbsp;are&nbsp;equal,&nbsp;and</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;a&nbsp;positive&nbsp;value&nbsp;if&nbsp;the&nbsp;first&nbsp;number&nbsp;is&nbsp;the&nbsp;larger&nbsp;one.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;main&nbsp;strategy&nbsp;goes&nbsp;like&nbsp;follows:</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;1.&nbsp;If&nbsp;one&nbsp;of&nbsp;the&nbsp;arguments&nbsp;is&nbsp;&lt;code&gt;null&lt;/code&gt;&nbsp;or&nbsp;'not&nbsp;a&nbsp;number',</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;an&nbsp;exception.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;2.&nbsp;If&nbsp;both&nbsp;values&nbsp;are&nbsp;'long&nbsp;compatible',&nbsp;compare&nbsp;their&nbsp;&lt;code&gt;longValue()&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;the&nbsp;usual&nbsp;comparison&nbsp;operators&nbsp;for&nbsp;primitive&nbsp;types&nbsp;(&amp;lt;,&nbsp;==,&nbsp;&amp;gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;3.&nbsp;If&nbsp;both&nbsp;values&nbsp;are&nbsp;'double&nbsp;compatible',&nbsp;compare&nbsp;their&nbsp;&lt;code&gt;doubleValue()&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;the&nbsp;usual&nbsp;comparison&nbsp;operators&nbsp;for&nbsp;primitive&nbsp;types&nbsp;(&amp;lt;,&nbsp;==,&nbsp;&amp;gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;4.&nbsp;If&nbsp;one&nbsp;of&nbsp;the&nbsp;values&nbsp;is&nbsp;infinite&nbsp;(and&nbsp;the&nbsp;other&nbsp;is&nbsp;finite),</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;determine&nbsp;the&nbsp;result&nbsp;depending&nbsp;on&nbsp;the&nbsp;sign&nbsp;of&nbsp;the&nbsp;infinite&nbsp;value.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;5.&nbsp;Otherwise&nbsp;convert&nbsp;both&nbsp;values&nbsp;to&nbsp;&lt;code&gt;java.math.BigDecimal&lt;/code&gt;&nbsp;and</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;the&nbsp;result&nbsp;of&nbsp;the&nbsp;&lt;code&gt;BigDecimal.compareTo(BigDecimal)&lt;/code&gt;&nbsp;method.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;As&nbsp;a&nbsp;consequence,&nbsp;the&nbsp;method&nbsp;is&nbsp;not&nbsp;suitable&nbsp;to&nbsp;implement&nbsp;a</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;java.util.Comparator&lt;/code&gt;&nbsp;for&nbsp;numbers.&nbsp;To&nbsp;achieve&nbsp;this,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;one&nbsp;had&nbsp;to&nbsp;accept&nbsp;'not&nbsp;a&nbsp;number'&nbsp;arguments&nbsp;and&nbsp;place&nbsp;them&nbsp;somewhere</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;in&nbsp;the&nbsp;row&nbsp;of&nbsp;numbers&nbsp;(probably&nbsp;at&nbsp;the&nbsp;upper&nbsp;end,&nbsp;i.e.&nbsp;larger&nbsp;than</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;positive&nbsp;infinity,&nbsp;as&nbsp;&lt;code&gt;Double.compare(double,&nbsp;double)&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;does&nbsp;it).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;So&nbsp;the&nbsp;behavior&nbsp;of&nbsp;this&nbsp;method&nbsp;is&nbsp;like&nbsp;that&nbsp;of&nbsp;the&nbsp;comparison</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;operator&nbsp;for&nbsp;primitive&nbsp;types&nbsp;and&nbsp;not&nbsp;like&nbsp;that&nbsp;of&nbsp;the&nbsp;related</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;compareTo(...)&lt;/code&gt;&nbsp;methods.&nbsp;Besides&nbsp;the&nbsp;handling&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;'not&nbsp;a&nbsp;number'&nbsp;values&nbsp;this&nbsp;makes&nbsp;a&nbsp;difference,&nbsp;when&nbsp;comparing</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;the&nbsp;float&nbsp;or&nbsp;double&nbsp;values&nbsp;&lt;code&gt;-0.0&lt;/code&gt;&nbsp;and&nbsp;&lt;code&gt;0.0&lt;/code&gt;:</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;again,&nbsp;like&nbsp;the&nbsp;operators,&nbsp;we&nbsp;consider&nbsp;them&nbsp;as&nbsp;equal&nbsp;(whereas</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;according&nbsp;to&nbsp;&lt;code&gt;Double.compareTo(...)&lt;/code&gt;&nbsp;&lt;code&gt;-0.0&lt;/code&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;is&nbsp;less&nbsp;than&nbsp;&lt;code&gt;0.0&lt;/code&gt;).</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">first</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">second</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">int</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">ArithmeticException&nbsp;One&nbsp;or&nbsp;both&nbsp;of&nbsp;the&nbsp;given&nbsp;numbers&nbsp;is&nbsp;&lt;code&gt;null&lt;/code&gt;&nbsp;or&nbsp;'not&nbsp;a&nbsp;number'.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">compare</font><font color="#000000">(</font><font color="#000000">Number&nbsp;first,&nbsp;Number&nbsp;second</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">ArithmeticException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">first&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;second&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">||&nbsp;isNaN</font><font color="#000000">(</font><font color="#000000">first</font><font color="#000000">)&nbsp;</font><font color="#000000">||&nbsp;isNaN</font><font color="#000000">(</font><font color="#000000">second</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">ArithmeticException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Arguments&nbsp;must&nbsp;not&nbsp;be&nbsp;null&nbsp;or&nbsp;NaN.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">result&nbsp;=&nbsp;-</font><font color="#990000">2</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isLongCompatible</font><font color="#000000">(</font><font color="#000000">first</font><font color="#000000">)&nbsp;</font><font color="#000000">&amp;&amp;&nbsp;isLongCompatible</font><font color="#000000">(</font><font color="#000000">second</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>long&nbsp;</b></font><font color="#000000">v1&nbsp;=&nbsp;first.longValue</font><font color="#000000">()</font><font color="#000000">,&nbsp;v2&nbsp;=&nbsp;second.longValue</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">result&nbsp;=&nbsp;v1&nbsp;&lt;&nbsp;v2&nbsp;?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;v1&nbsp;==&nbsp;v2&nbsp;?&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">:&nbsp;v1&nbsp;&gt;&nbsp;v2&nbsp;?&nbsp;</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">2</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isDoubleCompatible</font><font color="#000000">(</font><font color="#000000">first</font><font color="#000000">)&nbsp;</font><font color="#000000">&amp;&amp;&nbsp;isDoubleCompatible</font><font color="#000000">(</font><font color="#000000">second</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">v1&nbsp;=&nbsp;first.doubleValue</font><font color="#000000">()</font><font color="#000000">,&nbsp;v2&nbsp;=&nbsp;second.doubleValue</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">result&nbsp;=&nbsp;v1&nbsp;&lt;&nbsp;v2&nbsp;?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;v1&nbsp;==&nbsp;v2&nbsp;?&nbsp;</font><font color="#990000">0&nbsp;</font><font color="#000000">:&nbsp;v1&nbsp;&gt;&nbsp;v2&nbsp;?&nbsp;</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">2</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">result&nbsp;==&nbsp;</font><font color="#990000">2</font><font color="#000000">)&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;should&nbsp;not&nbsp;happen</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">ArithmeticException</font><font color="#000000">(</font><font color="#2a00ff">&#34;Arguments&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;first&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;&nbsp;and&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;second&nbsp;+&nbsp;</font><font color="#2a00ff">&#34;&nbsp;are&nbsp;not&nbsp;comparable.&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">result&nbsp;&gt;&nbsp;-</font><font color="#990000">2</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">result;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isInfinite</font><font color="#000000">(</font><font color="#000000">first</font><font color="#000000">))&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;=&gt;&nbsp;second&nbsp;is&nbsp;finite</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">first.doubleValue</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;Double.NEGATIVE_INFINITY&nbsp;?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isInfinite</font><font color="#000000">(</font><font color="#000000">second</font><font color="#000000">))&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;=&gt;&nbsp;first&nbsp;is&nbsp;finite</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">second.doubleValue</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;Double.POSITIVE_INFINITY&nbsp;?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">toBigDecimal</font><font color="#000000">(</font><font color="#000000">first</font><font color="#000000">)</font><font color="#000000">.compareTo</font><font color="#000000">(</font><font color="#000000">toBigDecimal</font><font color="#000000">(</font><font color="#000000">second</font><font color="#000000">))</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#000000">}</font></code></div></td>   </tr>
</table>
</td></tr></table><div style='margin-left:10px;'><TABLE width="650"  border=0 cellSpacing=0 cellPadding=0 border=0><TBODY>
<TR><TD align=left><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></TD>
<td align=right><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></td></TR></TBODY></TABLE></div><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
<table cellpadding=0 cellspacing=0 width=800 border=0><tr><td colSpan=5>2.13.Number</td></tr><tr class=odd><td width=20></td><td width=100>2.13.1.</td><td  align=left>Check Number properties and convert from Number</td></tr><tr class=even><td width=20></td><td width=100>2.13.2.</td><td  align=left><A href="TurnsastringvalueintoajavalangNumber.html">Turns a string value into a java.lang.Number.</a></td></tr><tr class=odd><td width=20></td><td width=100>2.13.3.</td><td  align=left><A href="FractionisaNumberimplementationthatstoresfractionsaccurately.html">Fraction is a Number implementation that stores fractions accurately.</a></td></tr><tr class=even><td width=20></td><td width=100>2.13.4.</td><td  align=left><A href="RepresentsarangeofNumberobjects.html">Represents a range of Number objects.</a></td></tr><tr class=odd><td width=20></td><td width=100>2.13.5.</td><td  align=left><A href="Anintegersynchronizedcounterclass.html">An integer synchronized counter class.</a></td></tr></table><TABLE border=0><TR><TD height=10></TD></TR></TABLE>
</td></tr></table></td></tr></table><center><TABLE border=0><TR align=left><TD><A href="http://www.techgeniussolutions.com/">techgeniussolutions.com</A>  &nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/contact.htm>Contact Us</A>&nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/ad.htm>Privacy Policy</A></Td></TR><TR align=left><TD class=Templatetext>Copyright 2013 - 14 TechGenius Solutions. All rights reserved.</TD></TR><TR align=left><TD>All other trademarks are property of their respective owners.</TD></TR></TABLE></center></BODY>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0040__Data-Type/CheckNumberpropertiesandconvertfromNumber.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:34 GMT -->
</HTML>