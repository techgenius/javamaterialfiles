<HTML>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0240__Swing/ScribblePaneallowsindividualPolyLinelinestobeselectedcutcopiedpasteddraggedanddropped.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:56:03 GMT -->
<HEAD><title> ScribblePane allows individual PolyLine lines to be selected, cut, copied, pasted, dragged, and dropped : Drag Drop&nbsp;&laquo;&nbsp;Swing&nbsp;&laquo;&nbsp;Java Tutorial </title><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta http-equiv="content-style-type" content="text/css"/><meta name="author" content="Demo Source and Support Ltd."/><meta name="copyright" content="2006 Demo Source and Support Ltd."/><meta name="description" CONTENT=" ScribblePane allows individual PolyLine lines to be selected, cut, copied, pasted, dragged, and dropped : Drag Drop&nbsp;&laquo;&nbsp;Swing&nbsp;&laquo;&nbsp;Java Tutorial "/><meta name="keywords" CONTENT=" ScribblePane allows individual PolyLine lines to be selected, cut, copied, pasted, dragged, and dropped : Drag Drop&nbsp;&laquo;&nbsp;Swing&nbsp;&laquo;&nbsp;Java Tutorial "/><LINK href="../../../style/techgeniussolutions.css" type=text/css rel=stylesheet><link rel="shortcut icon" href="http://www.techgeniussolutions.com/style/favicon.ico"></HEAD><body><H1>ScribblePane allows individual PolyLine lines to be selected, cut, copied, pasted, dragged, and dropped : Drag Drop&nbsp;&laquo;&nbsp;Swing&nbsp;&laquo;&nbsp;Java Tutorial</H1><table width=1024 border=0><tr align=left><td width=140 valign=top align=left><table cellpadding=0 cellspacing=0 class=leftBarTable><tr><td class=leftLangCell><A href="http://www.techgeniussolutions.com/">Home</A></td></tr><tr><td><A href="../CatalogJava.html">Java Tutorial</a></td></tr><tr><td><table class=leftBarFolderTable><tr><td valign=top>1.</td><td><A href="../0020__Language/Catalog0020__Language.html">Language</a></td></tr><tr><td valign=top>2.</td><td><A href="../0040__Data-Type/Catalog0040__Data-Type.html">Data Type</a></td></tr><tr><td valign=top>3.</td><td><A href="../0060__Operators/Catalog0060__Operators.html">Operators</a></td></tr><tr><td valign=top>4.</td><td><A href="../0080__Statement-Control/Catalog0080__Statement-Control.html">Statement Control</a></td></tr><tr><td valign=top>5.</td><td><A href="../0100__Class-Definition/Catalog0100__Class-Definition.html">Class Definition</a></td></tr><tr><td valign=top>6.</td><td><A href="../0120__Development/Catalog0120__Development.html">Development</a></td></tr><tr><td valign=top>7.</td><td><A href="../0125__Reflection/Catalog0125__Reflection.html">Reflection</a></td></tr><tr><td valign=top>8.</td><td><A href="../0130__Regular-Expressions/Catalog0130__Regular-Expressions.html">Regular Expressions</a></td></tr><tr><td valign=top>9.</td><td><A href="../0140__Collections/Catalog0140__Collections.html">Collections</a></td></tr><tr><td valign=top>10.</td><td><A href="../0160__Thread/Catalog0160__Thread.html">Thread</a></td></tr><tr><td valign=top>11.</td><td><A href="../0180__File/Catalog0180__File.html">File</a></td></tr><tr><td valign=top>12.</td><td><A href="../0200__Generics/Catalog0200__Generics.html">Generics</a></td></tr><tr><td valign=top>13.</td><td><A href="../0220__I18N/Catalog0220__I18N.html">I18N</a></td></tr><tr><td valign=top>14.</td><td><B>Swing</B></td></tr><tr><td valign=top>15.</td><td><A href="../0260__Swing-Event/Catalog0260__Swing-Event.html">Swing Event</a></td></tr><tr><td valign=top>16.</td><td><A href="../0261__2D-Graphics/Catalog0261__2D-Graphics.html">2D Graphics</a></td></tr><tr><td valign=top>17.</td><td><A href="../0280__SWT/Catalog0280__SWT.html">SWT</a></td></tr><tr><td valign=top>18.</td><td><A href="../0300__SWT-2D-Graphics/Catalog0300__SWT-2D-Graphics.html">SWT 2D Graphics</a></td></tr><tr><td valign=top>19.</td><td><A href="../0320__Network/Catalog0320__Network.html">Network</a></td></tr><tr><td valign=top>20.</td><td><A href="../0340__Database/Catalog0340__Database.html">Database</a></td></tr><tr><td valign=top>21.</td><td><A href="../0350__Hibernate/Catalog0350__Hibernate.html">Hibernate</a></td></tr><tr><td valign=top>22.</td><td><A href="../0355__JPA/Catalog0355__JPA.html">JPA</a></td></tr><tr><td valign=top>23.</td><td><A href="../0360__JSP/Catalog0360__JSP.html">JSP</a></td></tr><tr><td valign=top>24.</td><td><A href="../0380__JSTL/Catalog0380__JSTL.html">JSTL</a></td></tr><tr><td valign=top>25.</td><td><A href="../0400__Servlet/Catalog0400__Servlet.html">Servlet</a></td></tr><tr><td valign=top>26.</td><td><A href="../0410__Web-Services-SOA/Catalog0410__Web-Services-SOA.html">Web Services SOA</a></td></tr><tr><td valign=top>27.</td><td><A href="../0415__EJB3/Catalog0415__EJB3.html">EJB3</a></td></tr><tr><td valign=top>28.</td><td><A href="../0417__Spring/Catalog0417__Spring.html">Spring</a></td></tr><tr><td valign=top>29.</td><td><A href="../0419__PDF/Catalog0419__PDF.html">PDF</a></td></tr><tr><td valign=top>30.</td><td><A href="../0420__Email/Catalog0420__Email.html">Email</a></td></tr><tr><td valign=top>31.</td><td><A href="../0430__J2ME/Catalog0430__J2ME.html">J2ME</a></td></tr><tr><td valign=top>32.</td><td><A href="../0440__J2EE-Application/Catalog0440__J2EE-Application.html">J2EE Application</a></td></tr><tr><td valign=top>33.</td><td><A href="../0440__XML/Catalog0440__XML.html">XML</a></td></tr><tr><td valign=top>34.</td><td><A href="../0460__Design-Pattern/Catalog0460__Design-Pattern.html">Design Pattern</a></td></tr><tr><td valign=top>35.</td><td><A href="../0480__Log/Catalog0480__Log.html">Log</a></td></tr><tr><td valign=top>36.</td><td><A href="../0490__Security/Catalog0490__Security.html">Security</a></td></tr><tr><td valign=top>37.</td><td><A href="../0500__Apache-Common/Catalog0500__Apache-Common.html">Apache Common</a></td></tr><tr><td valign=top>38.</td><td><A href="../0520__Ant/Catalog0520__Ant.html">Ant</a></td></tr><tr><td valign=top>39.</td><td><A href="../0540__JUnit/Catalog0540__JUnit.html">JUnit</a></td></tr></table></td></tr></table></td><td width=2px></td><td valign=top><TABLE class=googleBar width=800 cellSpacing=0 cellPadding=0 border=0><TBODY><TR><TD width=60%><A href="../CatalogJava.html">Java Tutorial</a>&nbsp;&raquo;&nbsp;<A href="Catalog0240__Swing.html">Swing</a>&nbsp;&raquo;&nbsp;<A href="1780__Drag-Drop.html">Drag Drop</a></TD><TD align=right width=10%>&nbsp;</TD><TD align=right height=80% width=30%><form action="http://www.google.com/cse" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="15" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script></TD></FORM> </TD></TR></TBODY></TABLE><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed.html";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><table width=800 border=0><tr><td class=codeTitle>14.112.28.ScribblePane allows individual PolyLine lines to be selected, cut, copied, pasted, dragged, and dropped<span style='font-SIZE:80%;float:right'><a href='DemonstrateshowtoaddcopyanddragsupporttoaSwingcomponentwithTransferHandler.html'>Previous</a>/<a href='BuiltindraganddropsupportutilizeaTransferHandlerclass.html'>Next</a></td></tr><tr><td><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
</td></tr><tr><td><table border="0" cellpadding="3" cellspacing="0" bgcolor="#ffffff">
   <tr>
<td nowrap="nowrap" valign="top" align="left"><div class="codeShade"><code><font color="#3f7f5f">/*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Copyright&nbsp;(c)&nbsp;2004&nbsp;David&nbsp;Flanagan.&nbsp;&nbsp;All&nbsp;rights&nbsp;reserved.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;This&nbsp;code&nbsp;is&nbsp;from&nbsp;the&nbsp;book&nbsp;Java&nbsp;Examples&nbsp;in&nbsp;a&nbsp;Nutshell,&nbsp;3nd&nbsp;Edition.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;It&nbsp;is&nbsp;provided&nbsp;AS-IS,&nbsp;WITHOUT&nbsp;ANY&nbsp;WARRANTY&nbsp;either&nbsp;expressed&nbsp;or&nbsp;implied.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;You&nbsp;may&nbsp;study,&nbsp;use,&nbsp;and&nbsp;modify&nbsp;it&nbsp;for&nbsp;any&nbsp;non-commercial&nbsp;purpose,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;including&nbsp;teaching&nbsp;and&nbsp;use&nbsp;in&nbsp;open-source&nbsp;projects.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;You&nbsp;may&nbsp;distribute&nbsp;it&nbsp;non-commercially&nbsp;as&nbsp;long&nbsp;as&nbsp;you&nbsp;retain&nbsp;this&nbsp;notice.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;For&nbsp;a&nbsp;commercial&nbsp;use&nbsp;license,&nbsp;or&nbsp;to&nbsp;purchase&nbsp;the&nbsp;book,&nbsp;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;please&nbsp;visit&nbsp;http://www.davidflanagan.com/javaexamples3.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.AWTEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.BasicStroke;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Color;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Dimension;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.FlowLayout;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Graphics;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Graphics2D;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Image;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Point;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Rectangle;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Shape;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.Stroke;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.datatransfer.Clipboard;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.datatransfer.ClipboardOwner;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.datatransfer.DataFlavor;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.datatransfer.Transferable;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.datatransfer.UnsupportedFlavorException;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DnDConstants;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragGestureEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragGestureListener;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragSource;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragSourceDragEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragSourceDropEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragSourceEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DragSourceListener;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DropTarget;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DropTargetDragEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DropTargetDropEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DropTargetEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.dnd.DropTargetListener;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.event.MouseEvent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.geom.AffineTransform;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.geom.PathIterator;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.geom.Point2D;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.awt.geom.Rectangle2D;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.io.Externalizable;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.ArrayList;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.List;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">javax.swing.JComponent;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">javax.swing.JFrame;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">javax.swing.border.BevelBorder;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">javax.swing.border.Border;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">javax.swing.border.LineBorder;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;rewrite&nbsp;of&nbsp;ScribblePane&nbsp;allows&nbsp;individual&nbsp;PolyLine&nbsp;lines&nbsp;to&nbsp;be&nbsp;selected,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;cut,&nbsp;copied,&nbsp;pasted,&nbsp;dragged,&nbsp;and&nbsp;dropped.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>public&nbsp;class&nbsp;</b></font><font color="#000000">TransferableScribblePane&nbsp;</font><font color="#7f0055"><b>extends&nbsp;</b></font><font color="#000000">JComponent&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">List&nbsp;lines;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;PolyLines&nbsp;that&nbsp;comprise&nbsp;this&nbsp;scribble</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;currentLine;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;line&nbsp;currently&nbsp;being&nbsp;drawn</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;selectedLine;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;line&nbsp;that&nbsp;is&nbsp;current&nbsp;selected</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">canDragImage;&nbsp;</font><font color="#3f7f5f">//&nbsp;Can&nbsp;we&nbsp;drag&nbsp;an&nbsp;image&nbsp;of&nbsp;the&nbsp;line?</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Lines&nbsp;are&nbsp;3&nbsp;pixels&nbsp;wide,&nbsp;and&nbsp;the&nbsp;selected&nbsp;line&nbsp;is&nbsp;drawn&nbsp;dashed</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>static&nbsp;</b></font><font color="#000000">Stroke&nbsp;stroke&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">BasicStroke</font><font color="#000000">(</font><font color="#990000">3.0f</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>static&nbsp;</b></font><font color="#000000">Stroke&nbsp;selectedStroke&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">BasicStroke</font><font color="#000000">(</font><font color="#990000">3</font><font color="#000000">,&nbsp;BasicStroke.CAP_BUTT,&nbsp;BasicStroke.JOIN_ROUND,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#990000">0f</font><font color="#000000">,&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>float</b></font><font color="#000000">[]&nbsp;{&nbsp;</font><font color="#990000">3f</font><font color="#000000">,&nbsp;</font><font color="#990000">3f</font><font color="#000000">,&nbsp;</font><font color="#000000">}</font><font color="#000000">,&nbsp;</font><font color="#990000">0f</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Different&nbsp;borders&nbsp;indicate&nbsp;receptivity&nbsp;to&nbsp;drops</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>static&nbsp;</b></font><font color="#000000">Border&nbsp;normalBorder&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">LineBorder</font><font color="#000000">(</font><font color="#000000">Color.black,&nbsp;</font><font color="#990000">3</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>static&nbsp;</b></font><font color="#000000">Border&nbsp;canDropBorder&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">BevelBorder</font><font color="#000000">(</font><font color="#000000">BevelBorder.LOWERED</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">main</font><font color="#000000">(</font><font color="#000000">String&nbsp;args</font><font color="#000000">[])&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">JFrame&nbsp;f&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">JFrame</font><font color="#000000">(</font><font color="#2a00ff">&#34;ColorDrag&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">f.getContentPane</font><font color="#000000">()</font><font color="#000000">.setLayout</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">FlowLayout</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">f.getContentPane</font><font color="#000000">()</font><font color="#000000">.add</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">TransferableScribblePane</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">f.getContentPane</font><font color="#000000">()</font><font color="#000000">.add</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">TransferableScribblePane</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">f.pack</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">f.setVisible</font><font color="#000000">(</font><font color="#7f0055"><b>true</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;constructor&nbsp;method</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">TransferableScribblePane</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">setPreferredSize</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Dimension</font><font color="#000000">(</font><font color="#990000">450</font><font color="#000000">,&nbsp;</font><font color="#990000">200</font><font color="#000000">))</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;We&nbsp;need&nbsp;a&nbsp;default&nbsp;size</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">setBorder</font><font color="#000000">(</font><font color="#000000">normalBorder</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;and&nbsp;a&nbsp;border.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">ArrayList</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Start&nbsp;with&nbsp;an&nbsp;empty&nbsp;list&nbsp;of&nbsp;lines</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Register&nbsp;interest&nbsp;in&nbsp;mouse&nbsp;button&nbsp;and&nbsp;mouse&nbsp;motion&nbsp;events.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">enableEvents</font><font color="#000000">(</font><font color="#000000">AWTEvent.MOUSE_EVENT_MASK&nbsp;|&nbsp;AWTEvent.MOUSE_MOTION_EVENT_MASK</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Enable&nbsp;drag-and-drop&nbsp;by&nbsp;specifying&nbsp;a&nbsp;listener&nbsp;that&nbsp;will&nbsp;be</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;notified&nbsp;when&nbsp;a&nbsp;drag&nbsp;begins.&nbsp;dragGestureListener&nbsp;is&nbsp;defined&nbsp;later.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">DragSource&nbsp;dragSource&nbsp;=&nbsp;DragSource.getDefaultDragSource</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">dragSource.createDefaultDragGestureRecognizer</font><font color="#000000">(</font><font color="#000000">this,&nbsp;DnDConstants.ACTION_COPY_OR_MOVE,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">dragGestureListener</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Enable&nbsp;drops&nbsp;on&nbsp;this&nbsp;component&nbsp;by&nbsp;registering&nbsp;a&nbsp;listener&nbsp;to</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;be&nbsp;notified&nbsp;when&nbsp;something&nbsp;is&nbsp;dragged&nbsp;or&nbsp;dropped&nbsp;over&nbsp;us.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.setDropTarget</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">DropTarget</font><font color="#000000">(</font><font color="#000000">this,&nbsp;dropTargetListener</font><font color="#000000">))</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Check&nbsp;whether&nbsp;the&nbsp;system&nbsp;allows&nbsp;us&nbsp;to&nbsp;drag&nbsp;an&nbsp;image&nbsp;of&nbsp;the&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">canDragImage&nbsp;=&nbsp;dragSource.isDragImageSupported</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;We&nbsp;override&nbsp;this&nbsp;method&nbsp;to&nbsp;draw&nbsp;ourselves.&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">paintComponent</font><font color="#000000">(</font><font color="#000000">Graphics&nbsp;g</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Let&nbsp;the&nbsp;superclass&nbsp;do&nbsp;its&nbsp;painting&nbsp;first</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>super</b></font><font color="#000000">.paintComponent</font><font color="#000000">(</font><font color="#000000">g</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Make&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;Graphics&nbsp;context&nbsp;so&nbsp;we&nbsp;can&nbsp;modify&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Graphics2D&nbsp;g2&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">Graphics2D</font><font color="#000000">)&nbsp;(</font><font color="#000000">g.</font><font color="#7f0055"><b>create</b></font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Our&nbsp;superclass&nbsp;doesn't&nbsp;paint&nbsp;the&nbsp;background,&nbsp;so&nbsp;do&nbsp;this&nbsp;ourselves.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.setColor</font><font color="#000000">(</font><font color="#000000">getBackground</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.fillRect</font><font color="#000000">(</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;getWidth</font><font color="#000000">()</font><font color="#000000">,&nbsp;getHeight</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Set&nbsp;the&nbsp;line&nbsp;width&nbsp;and&nbsp;color&nbsp;to&nbsp;use&nbsp;for&nbsp;the&nbsp;foreground</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.setStroke</font><font color="#000000">(</font><font color="#000000">stroke</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.setColor</font><font color="#000000">(</font><font color="#7f0055"><b>this</b></font><font color="#000000">.getForeground</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Now&nbsp;loop&nbsp;through&nbsp;the&nbsp;PolyLine&nbsp;shapes&nbsp;and&nbsp;draw&nbsp;them&nbsp;all</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">numlines&nbsp;=&nbsp;lines.size</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;numlines;&nbsp;i++</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;line&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#000000">lines.get</font><font color="#000000">(</font><font color="#000000">i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">line&nbsp;==&nbsp;selectedLine</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;it&nbsp;is&nbsp;the&nbsp;selected&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.setStroke</font><font color="#000000">(</font><font color="#000000">selectedStroke</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Set&nbsp;dash&nbsp;pattern</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.draw</font><font color="#000000">(</font><font color="#000000">line</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Draw&nbsp;the&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.setStroke</font><font color="#000000">(</font><font color="#000000">stroke</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Revert&nbsp;to&nbsp;solid&nbsp;lines</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else</b></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g2.draw</font><font color="#000000">(</font><font color="#000000">line</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Otherwise&nbsp;just&nbsp;draw&nbsp;the&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;method&nbsp;is&nbsp;called&nbsp;on&nbsp;mouse&nbsp;button&nbsp;events.&nbsp;It&nbsp;begins&nbsp;a&nbsp;new&nbsp;line&nbsp;or&nbsp;tries</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;to&nbsp;select&nbsp;an&nbsp;existing&nbsp;line.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">processMouseEvent</font><font color="#000000">(</font><font color="#000000">MouseEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.getButton</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;MouseEvent.BUTTON1</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;Left&nbsp;mouse&nbsp;button</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.getID</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;MouseEvent.MOUSE_PRESSED</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;Pressed&nbsp;down</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.isShiftDown</font><font color="#000000">())&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;with&nbsp;Shift&nbsp;key</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;the&nbsp;shift&nbsp;key&nbsp;is&nbsp;down,&nbsp;try&nbsp;to&nbsp;select&nbsp;a&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">x&nbsp;=&nbsp;e.getX</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">y&nbsp;=&nbsp;e.getY</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Loop&nbsp;through&nbsp;the&nbsp;lines&nbsp;checking&nbsp;to&nbsp;see&nbsp;if&nbsp;we&nbsp;hit&nbsp;one</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;selection&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">numlines&nbsp;=&nbsp;lines.size</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;numlines;&nbsp;i++</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;line&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#000000">lines.get</font><font color="#000000">(</font><font color="#000000">i</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">line.intersects</font><font color="#000000">(</font><font color="#000000">x&nbsp;-&nbsp;</font><font color="#990000">2</font><font color="#000000">,&nbsp;y&nbsp;-&nbsp;</font><font color="#990000">2</font><font color="#000000">,&nbsp;</font><font color="#990000">4</font><font color="#000000">,&nbsp;</font><font color="#990000">4</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">selection&nbsp;=&nbsp;line;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.consume</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>break</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;we&nbsp;found&nbsp;an&nbsp;intersecting&nbsp;line,&nbsp;save&nbsp;it&nbsp;and&nbsp;repaint</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">selection&nbsp;!=&nbsp;selectedLine</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;selection&nbsp;changed</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">selectedLine&nbsp;=&nbsp;selection;&nbsp;</font><font color="#3f7f5f">//&nbsp;remember&nbsp;which&nbsp;is&nbsp;selected</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;will&nbsp;make&nbsp;selection&nbsp;dashed</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">!e.isControlDown</font><font color="#000000">())&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;no&nbsp;shift&nbsp;key&nbsp;or&nbsp;ctrl&nbsp;key</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Start&nbsp;a&nbsp;new&nbsp;line&nbsp;on&nbsp;mouse&nbsp;down&nbsp;without&nbsp;shift&nbsp;or&nbsp;ctrl</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">currentLine&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">PolyLine</font><font color="#000000">(</font><font color="#000000">e.getX</font><font color="#000000">()</font><font color="#000000">,&nbsp;e.getY</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines.add</font><font color="#000000">(</font><font color="#000000">currentLine</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.consume</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.getID</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;MouseEvent.MOUSE_RELEASED</font><font color="#000000">)&nbsp;{</font><font color="#3f7f5f">//&nbsp;Left&nbsp;Button&nbsp;Up</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;End&nbsp;the&nbsp;line&nbsp;on&nbsp;mouse&nbsp;up</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">currentLine&nbsp;!=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">currentLine&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.consume</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;superclass&nbsp;method&nbsp;dispatches&nbsp;to&nbsp;registered&nbsp;event&nbsp;listeners</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>super</b></font><font color="#000000">.processMouseEvent</font><font color="#000000">(</font><font color="#000000">e</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;method&nbsp;is&nbsp;called&nbsp;for&nbsp;mouse&nbsp;motion&nbsp;events.&nbsp;We&nbsp;don't&nbsp;have&nbsp;to&nbsp;detect</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;gestures&nbsp;that&nbsp;initiate&nbsp;a&nbsp;drag&nbsp;in&nbsp;this&nbsp;method.&nbsp;That&nbsp;is&nbsp;the&nbsp;job&nbsp;of&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;DragGestureRecognizer&nbsp;we&nbsp;created&nbsp;in&nbsp;the&nbsp;constructor:&nbsp;it&nbsp;will&nbsp;notify&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;DragGestureListener&nbsp;defined&nbsp;below.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">processMouseMotionEvent</font><font color="#000000">(</font><font color="#000000">MouseEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.getID</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;MouseEvent.MOUSE_DRAGGED&nbsp;&amp;&amp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;we're&nbsp;dragging</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">currentLine&nbsp;!=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;and&nbsp;a&nbsp;line&nbsp;exists</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">currentLine.addSegment</font><font color="#000000">(</font><font color="#000000">e.getX</font><font color="#000000">()</font><font color="#000000">,&nbsp;e.getY</font><font color="#000000">())</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Add&nbsp;a&nbsp;line&nbsp;segment</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.consume</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Eat&nbsp;the&nbsp;event</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Redisplay&nbsp;all&nbsp;lines</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>super</b></font><font color="#000000">.processMouseMotionEvent</font><font color="#000000">(</font><font color="#000000">e</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Invoke&nbsp;any&nbsp;listeners</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Copy&nbsp;the&nbsp;selected&nbsp;line&nbsp;to&nbsp;the&nbsp;clipboard,&nbsp;then&nbsp;delete&nbsp;it&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">cut</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">selectedLine&nbsp;==&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Only&nbsp;works&nbsp;if&nbsp;a&nbsp;line&nbsp;is&nbsp;selected</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">copy</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Do&nbsp;a&nbsp;Copy&nbsp;operation...</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines.remove</font><font color="#000000">(</font><font color="#000000">selectedLine</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;and&nbsp;then&nbsp;erase&nbsp;the&nbsp;selected&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">selectedLine&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Repaint&nbsp;because&nbsp;a&nbsp;line&nbsp;was&nbsp;removed</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Copy&nbsp;the&nbsp;selected&nbsp;line&nbsp;to&nbsp;the&nbsp;clipboard&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">copy</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">selectedLine&nbsp;==&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Only&nbsp;works&nbsp;if&nbsp;a&nbsp;line&nbsp;is&nbsp;selected</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Get&nbsp;the&nbsp;system&nbsp;Clipboard&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Clipboard&nbsp;c&nbsp;=&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.getToolkit</font><font color="#000000">()</font><font color="#000000">.getSystemClipboard</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Wrap&nbsp;the&nbsp;selected&nbsp;line&nbsp;in&nbsp;a&nbsp;TransferablePolyLine&nbsp;object</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;and&nbsp;pass&nbsp;it&nbsp;to&nbsp;the&nbsp;clipboard,&nbsp;with&nbsp;an&nbsp;object&nbsp;to&nbsp;receive&nbsp;notification</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;when&nbsp;some&nbsp;other&nbsp;application&nbsp;takes&nbsp;ownership&nbsp;of&nbsp;the&nbsp;clipboard</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">c.setContents</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">TransferablePolyLine</font><font color="#000000">((</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#000000">selectedLine.clone</font><font color="#000000">())</font><font color="#000000">,&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">ClipboardOwner</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">lostOwnership</font><font color="#000000">(</font><font color="#000000">Clipboard&nbsp;c,&nbsp;Transferable&nbsp;t</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;something&nbsp;else</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;is&nbsp;copied&nbsp;to&nbsp;the&nbsp;clipboard.&nbsp;We&nbsp;could&nbsp;use&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;to&nbsp;deselect&nbsp;the&nbsp;selected&nbsp;line,&nbsp;if&nbsp;we&nbsp;wanted.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">})</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Get&nbsp;a&nbsp;PolyLine&nbsp;from&nbsp;the&nbsp;clipboard,&nbsp;if&nbsp;one&nbsp;exists,&nbsp;and&nbsp;display&nbsp;it&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">paste</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Get&nbsp;the&nbsp;system&nbsp;Clipboard&nbsp;and&nbsp;ask&nbsp;for&nbsp;its&nbsp;Transferable&nbsp;contents</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Clipboard&nbsp;c&nbsp;=&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.getToolkit</font><font color="#000000">()</font><font color="#000000">.getSystemClipboard</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Transferable&nbsp;t&nbsp;=&nbsp;c.getContents</font><font color="#000000">(</font><font color="#7f0055"><b>this</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;See&nbsp;if&nbsp;we&nbsp;can&nbsp;extract&nbsp;a&nbsp;PolyLine&nbsp;from&nbsp;the&nbsp;Transferable&nbsp;object</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;line;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>try&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">line&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#000000">t.getTransferData</font><font color="#000000">(</font><font color="#000000">TransferablePolyLine.FLAVOR</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>catch&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Exception&nbsp;e</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;UnsupportedFlavorException&nbsp;or&nbsp;IOException</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;we&nbsp;get&nbsp;here,&nbsp;the&nbsp;clipboard&nbsp;doesn't&nbsp;hold&nbsp;a&nbsp;PolyLine&nbsp;we&nbsp;can&nbsp;use</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">getToolkit</font><font color="#000000">()</font><font color="#000000">.beep</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;So&nbsp;beep&nbsp;to&nbsp;indicate&nbsp;the&nbsp;error</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines.add</font><font color="#000000">(</font><font color="#000000">line</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;We&nbsp;got&nbsp;a&nbsp;line&nbsp;from&nbsp;the&nbsp;clipboard,&nbsp;so&nbsp;add&nbsp;it&nbsp;to&nbsp;list</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;And&nbsp;repaint&nbsp;to&nbsp;make&nbsp;the&nbsp;line&nbsp;appear</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Erase&nbsp;all&nbsp;lines&nbsp;and&nbsp;repaint.&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">clear</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines.clear</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;DragGestureListener&nbsp;is&nbsp;notified&nbsp;when&nbsp;the&nbsp;user&nbsp;initiates&nbsp;a&nbsp;drag.&nbsp;We</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;passed&nbsp;it&nbsp;to&nbsp;the&nbsp;DragGestureRecognizer&nbsp;we&nbsp;created&nbsp;in&nbsp;the&nbsp;constructor.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">DragGestureListener&nbsp;dragGestureListener&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">DragGestureListener</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragGestureRecognized</font><font color="#000000">(</font><font color="#000000">DragGestureEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Don't&nbsp;start&nbsp;a&nbsp;drag&nbsp;if&nbsp;there&nbsp;isn't&nbsp;a&nbsp;selected&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">selectedLine&nbsp;==&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Find&nbsp;out&nbsp;where&nbsp;the&nbsp;drag&nbsp;began</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">MouseEvent&nbsp;trigger&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">MouseEvent</font><font color="#000000">)&nbsp;</font><font color="#000000">e.getTriggerEvent</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">x&nbsp;=&nbsp;trigger.getX</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">y&nbsp;=&nbsp;trigger.getY</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Don't&nbsp;do&nbsp;anything&nbsp;if&nbsp;the&nbsp;drag&nbsp;was&nbsp;not&nbsp;near&nbsp;the&nbsp;selected&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">!selectedLine.intersects</font><font color="#000000">(</font><font color="#000000">x&nbsp;-&nbsp;</font><font color="#990000">4</font><font color="#000000">,&nbsp;y&nbsp;-&nbsp;</font><font color="#990000">4</font><font color="#000000">,&nbsp;</font><font color="#990000">8</font><font color="#000000">,&nbsp;</font><font color="#990000">8</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Make&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;selected&nbsp;line,&nbsp;adjust&nbsp;the&nbsp;copy&nbsp;so&nbsp;that</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;the&nbsp;point&nbsp;under&nbsp;the&nbsp;mouse&nbsp;is&nbsp;(0,0),&nbsp;and&nbsp;wrap&nbsp;the&nbsp;copy&nbsp;in&nbsp;a</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Tranferable&nbsp;wrapper.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;copy&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#000000">selectedLine.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">copy.translate</font><font color="#000000">(</font><font color="#000000">-x,&nbsp;-y</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Transferable&nbsp;t&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">TransferablePolyLine</font><font color="#000000">(</font><font color="#000000">copy</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;the&nbsp;system&nbsp;allows&nbsp;custom&nbsp;images&nbsp;to&nbsp;be&nbsp;dragged,&nbsp;make</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;an&nbsp;image&nbsp;of&nbsp;the&nbsp;line&nbsp;on&nbsp;a&nbsp;transparent&nbsp;background</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Image&nbsp;dragImage&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Point&nbsp;hotspot&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">canDragImage</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Rectangle&nbsp;box&nbsp;=&nbsp;copy.getBounds</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">dragImage&nbsp;=&nbsp;createImage</font><font color="#000000">(</font><font color="#000000">box.width,&nbsp;box.height</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Graphics2D&nbsp;g&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">Graphics2D</font><font color="#000000">)&nbsp;</font><font color="#000000">dragImage.getGraphics</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g.setColor</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Color</font><font color="#000000">(</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">0</font><font color="#000000">))</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;transparent&nbsp;bg</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g.fillRect</font><font color="#000000">(</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;box.width,&nbsp;box.height</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g.setColor</font><font color="#000000">(</font><font color="#000000">getForeground</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g.setStroke</font><font color="#000000">(</font><font color="#000000">selectedStroke</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g.translate</font><font color="#000000">(</font><font color="#000000">-box.x,&nbsp;-box.y</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">g.draw</font><font color="#000000">(</font><font color="#000000">copy</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">hotspot&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Point</font><font color="#000000">(</font><font color="#000000">-box.x,&nbsp;-box.y</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Now&nbsp;begin&nbsp;dragging&nbsp;the&nbsp;line,&nbsp;specifying&nbsp;the&nbsp;listener</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;object&nbsp;to&nbsp;receive&nbsp;notifications&nbsp;about&nbsp;the&nbsp;progress&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;the&nbsp;operation.&nbsp;Note:&nbsp;the&nbsp;startDrag()&nbsp;method&nbsp;is&nbsp;defined&nbsp;by</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;the&nbsp;event&nbsp;object,&nbsp;which&nbsp;is&nbsp;unusual.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.startDrag</font><font color="#000000">(</font><font color="#000000">null,&nbsp;</font><font color="#3f7f5f">//&nbsp;Use&nbsp;default&nbsp;drag-and-drop&nbsp;cursors</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">dragImage,&nbsp;</font><font color="#3f7f5f">//&nbsp;Use&nbsp;the&nbsp;image,&nbsp;if&nbsp;supported</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">hotspot,&nbsp;</font><font color="#3f7f5f">//&nbsp;Ditto&nbsp;for&nbsp;the&nbsp;image&nbsp;hotspot</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">t,&nbsp;</font><font color="#3f7f5f">//&nbsp;Drag&nbsp;this&nbsp;object</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">dragSourceListener</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Send&nbsp;notifications&nbsp;here</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;If&nbsp;this&nbsp;component&nbsp;is&nbsp;the&nbsp;source&nbsp;of&nbsp;a&nbsp;drag,&nbsp;then&nbsp;this&nbsp;DragSourceListener</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;will&nbsp;receive&nbsp;notifications&nbsp;about&nbsp;the&nbsp;progress&nbsp;of&nbsp;the&nbsp;drag.&nbsp;The&nbsp;only&nbsp;one&nbsp;we</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;use&nbsp;here&nbsp;is&nbsp;dragDropEnd()&nbsp;which&nbsp;is&nbsp;called&nbsp;after&nbsp;a&nbsp;drop&nbsp;occurs.&nbsp;We&nbsp;could&nbsp;use</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;the&nbsp;other&nbsp;methods&nbsp;to&nbsp;change&nbsp;cursors&nbsp;or&nbsp;perform&nbsp;other&nbsp;&#34;drag&nbsp;over&nbsp;effects&#34;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">DragSourceListener&nbsp;dragSourceListener&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">DragSourceListener</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Invoked&nbsp;when&nbsp;dragging&nbsp;stops</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragDropEnd</font><font color="#000000">(</font><font color="#000000">DragSourceDropEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">!e.getDropSuccess</font><font color="#000000">())</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Ignore&nbsp;failed&nbsp;drops</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;the&nbsp;drop&nbsp;was&nbsp;a&nbsp;move,&nbsp;then&nbsp;delete&nbsp;the&nbsp;selected&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.getDropAction</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;DnDConstants.ACTION_MOVE</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines.remove</font><font color="#000000">(</font><font color="#000000">selectedLine</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">selectedLine&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;following&nbsp;methods&nbsp;are&nbsp;unused&nbsp;here.&nbsp;We&nbsp;could&nbsp;implement&nbsp;them</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;to&nbsp;change&nbsp;custom&nbsp;cursors&nbsp;or&nbsp;perform&nbsp;other&nbsp;&#34;drag&nbsp;over&nbsp;effects&#34;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragEnter</font><font color="#000000">(</font><font color="#000000">DragSourceDragEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragExit</font><font color="#000000">(</font><font color="#000000">DragSourceEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragOver</font><font color="#000000">(</font><font color="#000000">DragSourceDragEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dropActionChanged</font><font color="#000000">(</font><font color="#000000">DragSourceDragEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;DropTargetListener&nbsp;is&nbsp;notified&nbsp;when&nbsp;something&nbsp;is&nbsp;dragged&nbsp;over&nbsp;this</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;component.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">DropTargetListener&nbsp;dropTargetListener&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">DropTargetListener</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;something&nbsp;is&nbsp;dragged&nbsp;over&nbsp;us.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;we&nbsp;understand&nbsp;what&nbsp;is&nbsp;being&nbsp;dragged,&nbsp;then&nbsp;tell&nbsp;the&nbsp;system</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;we&nbsp;can&nbsp;accept&nbsp;it,&nbsp;and&nbsp;change&nbsp;our&nbsp;border&nbsp;to&nbsp;provide&nbsp;extra</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;&#34;drag&nbsp;under&#34;&nbsp;visual&nbsp;feedback&nbsp;to&nbsp;the&nbsp;user&nbsp;to&nbsp;indicate&nbsp;our</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;receptivity&nbsp;to&nbsp;a&nbsp;drop.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragEnter</font><font color="#000000">(</font><font color="#000000">DropTargetDragEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.isDataFlavorSupported</font><font color="#000000">(</font><font color="#000000">TransferablePolyLine.FLAVOR</font><font color="#000000">))&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.acceptDrag</font><font color="#000000">(</font><font color="#000000">e.getDropAction</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">setBorder</font><font color="#000000">(</font><font color="#000000">canDropBorder</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Revert&nbsp;to&nbsp;our&nbsp;normal&nbsp;border&nbsp;if&nbsp;the&nbsp;drag&nbsp;moves&nbsp;off&nbsp;us.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragExit</font><font color="#000000">(</font><font color="#000000">DropTargetEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">setBorder</font><font color="#000000">(</font><font color="#000000">normalBorder</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;something&nbsp;is&nbsp;dropped&nbsp;on&nbsp;us.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">drop</font><font color="#000000">(</font><font color="#000000">DropTargetDropEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;a&nbsp;PolyLine&nbsp;is&nbsp;dropped,&nbsp;accept&nbsp;either&nbsp;a&nbsp;COPY&nbsp;or&nbsp;a&nbsp;MOVE</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">e.isDataFlavorSupported</font><font color="#000000">(</font><font color="#000000">TransferablePolyLine.FLAVOR</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.acceptDrop</font><font color="#000000">(</font><font color="#000000">e.getDropAction</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{&nbsp;</font><font color="#3f7f5f">//&nbsp;Otherwise,&nbsp;reject&nbsp;the&nbsp;drop&nbsp;and&nbsp;return</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.rejectDrop</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Get&nbsp;the&nbsp;dropped&nbsp;object&nbsp;and&nbsp;extract&nbsp;a&nbsp;PolyLine&nbsp;from&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Transferable&nbsp;t&nbsp;=&nbsp;e.getTransferable</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;line;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>try&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">line&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#000000">t.getTransferData</font><font color="#000000">(</font><font color="#000000">TransferablePolyLine.FLAVOR</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>catch&nbsp;</b></font><font color="#000000">(</font><font color="#000000">Exception&nbsp;ex</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;UnsupportedFlavor&nbsp;or&nbsp;IOException</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">getToolkit</font><font color="#000000">()</font><font color="#000000">.beep</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Something&nbsp;went&nbsp;wrong,&nbsp;so&nbsp;beep</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.dropComplete</font><font color="#000000">(</font><font color="#7f0055"><b>false</b></font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Tell&nbsp;the&nbsp;system&nbsp;we&nbsp;failed</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Figure&nbsp;out&nbsp;where&nbsp;the&nbsp;drop&nbsp;occurred,&nbsp;and&nbsp;translate&nbsp;so&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;point&nbsp;that&nbsp;was&nbsp;formerly&nbsp;(0,0)&nbsp;is&nbsp;now&nbsp;at&nbsp;that&nbsp;point.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Point&nbsp;p&nbsp;=&nbsp;e.getLocation</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">line.translate</font><font color="#000000">((</font><font color="#7f0055"><b>float</b></font><font color="#000000">)&nbsp;</font><font color="#000000">p.getX</font><font color="#000000">()</font><font color="#000000">,&nbsp;</font><font color="#000000">(</font><font color="#7f0055"><b>float</b></font><font color="#000000">)&nbsp;</font><font color="#000000">p.getY</font><font color="#000000">())</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Add&nbsp;the&nbsp;line&nbsp;to&nbsp;our&nbsp;list,&nbsp;and&nbsp;repaint</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lines.add</font><font color="#000000">(</font><font color="#000000">line</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">repaint</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Tell&nbsp;the&nbsp;system&nbsp;that&nbsp;we&nbsp;successfully&nbsp;completed&nbsp;the&nbsp;transfer.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;means&nbsp;it&nbsp;is&nbsp;safe&nbsp;for&nbsp;the&nbsp;initiating&nbsp;component&nbsp;to&nbsp;delete</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;its&nbsp;copy&nbsp;of&nbsp;the&nbsp;line</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.dropComplete</font><font color="#000000">(</font><font color="#7f0055"><b>true</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;We&nbsp;could&nbsp;provide&nbsp;additional&nbsp;drag&nbsp;under&nbsp;effects&nbsp;with&nbsp;this&nbsp;method.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dragOver</font><font color="#000000">(</font><font color="#000000">DropTargetDragEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;we&nbsp;used&nbsp;custom&nbsp;cursors,&nbsp;we&nbsp;would&nbsp;update&nbsp;them&nbsp;here.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">dropActionChanged</font><font color="#000000">(</font><font color="#000000">DropTargetDragEvent&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;Shape&nbsp;implementation&nbsp;represents&nbsp;a&nbsp;series&nbsp;of&nbsp;connected&nbsp;line&nbsp;segments.&nbsp;It</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;is&nbsp;like&nbsp;a&nbsp;Polygon,&nbsp;but&nbsp;is&nbsp;not&nbsp;closed.&nbsp;This&nbsp;class&nbsp;is&nbsp;used&nbsp;by&nbsp;the&nbsp;ScribblePane</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;class&nbsp;of&nbsp;the&nbsp;GUI&nbsp;chapter.&nbsp;It&nbsp;implements&nbsp;the&nbsp;Cloneable&nbsp;and&nbsp;Externalizable</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;interfaces&nbsp;so&nbsp;it&nbsp;can&nbsp;be&nbsp;used&nbsp;in&nbsp;the&nbsp;Drag-and-Drop&nbsp;examples&nbsp;in&nbsp;the&nbsp;Data</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Transfer&nbsp;chapter.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>class&nbsp;</b></font><font color="#000000">PolyLine&nbsp;</font><font color="#7f0055"><b>implements&nbsp;</b></font><font color="#000000">Shape,&nbsp;Cloneable,&nbsp;Externalizable&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">x0,&nbsp;y0;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;starting&nbsp;point&nbsp;of&nbsp;the&nbsp;polyline.</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>float</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">coords;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;end&nbsp;point&nbsp;of&nbsp;each&nbsp;line</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;segment&nbsp;packed&nbsp;into&nbsp;a&nbsp;single&nbsp;array&nbsp;for&nbsp;simplicity:</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;[x1,y1,x2,y2,...]&nbsp;Note&nbsp;that&nbsp;these&nbsp;are&nbsp;relative&nbsp;to&nbsp;x0,y0</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">numsegs;&nbsp;</font><font color="#3f7f5f">//&nbsp;How&nbsp;many&nbsp;line&nbsp;segments&nbsp;in&nbsp;this&nbsp;PolyLine</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Coordinates&nbsp;of&nbsp;our&nbsp;bounding&nbsp;box,&nbsp;relative&nbsp;to&nbsp;(x0,&nbsp;y0);</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">xmin&nbsp;=&nbsp;</font><font color="#990000">0f</font><font color="#000000">,&nbsp;xmax&nbsp;=&nbsp;</font><font color="#990000">0f</font><font color="#000000">,&nbsp;ymin&nbsp;=&nbsp;</font><font color="#990000">0f</font><font color="#000000">,&nbsp;ymax&nbsp;=&nbsp;</font><font color="#990000">0f</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;No&nbsp;arg&nbsp;constructor&nbsp;assumes&nbsp;an&nbsp;origin&nbsp;of&nbsp;(0,0)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;A&nbsp;no-arg&nbsp;constructor&nbsp;is&nbsp;required&nbsp;for&nbsp;the&nbsp;Externalizable&nbsp;interface</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">PolyLine</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">(</font><font color="#990000">0f</font><font color="#000000">,&nbsp;</font><font color="#990000">0f</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;constructor.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">PolyLine</font><font color="#000000">(</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">x0,&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">y0</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">setOrigin</font><font color="#000000">(</font><font color="#000000">x0,&nbsp;y0</font><font color="#000000">)</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Record&nbsp;the&nbsp;starting&nbsp;point.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">numsegs&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;Note&nbsp;that&nbsp;we&nbsp;have&nbsp;no&nbsp;line&nbsp;segments,&nbsp;so&nbsp;far</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Set&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;PolyLine.&nbsp;Useful&nbsp;when&nbsp;moving&nbsp;it&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">setOrigin</font><font color="#000000">(</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">x0,&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">y0</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.x0&nbsp;=&nbsp;x0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.y0&nbsp;=&nbsp;y0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Add&nbsp;dx&nbsp;and&nbsp;dy&nbsp;to&nbsp;the&nbsp;origin&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">translate</font><font color="#000000">(</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">dx,&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">dy</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.x0&nbsp;+=&nbsp;dx;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.y0&nbsp;+=&nbsp;dy;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Add&nbsp;a&nbsp;line&nbsp;segment&nbsp;to&nbsp;the&nbsp;PolyLine.&nbsp;Note&nbsp;that&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;absolute</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;coordinates,&nbsp;even&nbsp;though&nbsp;the&nbsp;implementation&nbsp;stores&nbsp;them&nbsp;relative&nbsp;to&nbsp;x0,&nbsp;y0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">addSegment</font><font color="#000000">(</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">x,&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">y</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Allocate&nbsp;or&nbsp;reallocate&nbsp;the&nbsp;coords[]&nbsp;array&nbsp;when&nbsp;necessary</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">coords&nbsp;==&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">coords&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>float</b></font><font color="#000000">[</font><font color="#990000">32</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">numsegs&nbsp;*&nbsp;</font><font color="#990000">2&nbsp;</font><font color="#000000">&gt;=&nbsp;coords.length</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>float</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">newcoords&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>float</b></font><font color="#000000">[</font><font color="#000000">coords.length&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.arraycopy</font><font color="#000000">(</font><font color="#000000">coords,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;newcoords,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;coords.length</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">coords&nbsp;=&nbsp;newcoords;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Convert&nbsp;from&nbsp;absolute&nbsp;to&nbsp;relative&nbsp;coordinates</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">x&nbsp;=&nbsp;x&nbsp;-&nbsp;x0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">y&nbsp;=&nbsp;y&nbsp;-&nbsp;y0;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Store&nbsp;the&nbsp;data</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">coords</font><font color="#000000">[</font><font color="#000000">numsegs&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;x;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">coords</font><font color="#000000">[</font><font color="#000000">numsegs&nbsp;*&nbsp;</font><font color="#990000">2&nbsp;</font><font color="#000000">+&nbsp;</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;y;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">numsegs++;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Enlarge&nbsp;the&nbsp;bounding&nbsp;box,&nbsp;if&nbsp;necessary</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">x&nbsp;&gt;&nbsp;xmax</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">xmax&nbsp;=&nbsp;x;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">x&nbsp;&lt;&nbsp;xmin</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">xmin&nbsp;=&nbsp;x;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">y&nbsp;&gt;&nbsp;ymax</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">ymax&nbsp;=&nbsp;y;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">y&nbsp;&lt;&nbsp;ymin</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">ymin&nbsp;=&nbsp;y;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">/*------------------&nbsp;The&nbsp;Shape&nbsp;Interface&nbsp;---------------------&nbsp;*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Return&nbsp;floating-point&nbsp;bounding&nbsp;box</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Rectangle2D&nbsp;getBounds2D</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Rectangle2D.Float</font><font color="#000000">(</font><font color="#000000">x0&nbsp;+&nbsp;xmin,&nbsp;y0&nbsp;+&nbsp;ymin,&nbsp;xmax&nbsp;-&nbsp;xmin,&nbsp;ymax&nbsp;-&nbsp;ymin</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Return&nbsp;integer&nbsp;bounding&nbsp;box,&nbsp;rounded&nbsp;to&nbsp;outermost&nbsp;pixels.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Rectangle&nbsp;getBounds</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">Rectangle</font><font color="#000000">((</font><font color="#7f0055"><b>int</b></font><font color="#000000">)&nbsp;(</font><font color="#000000">x0&nbsp;+&nbsp;xmin&nbsp;-&nbsp;</font><font color="#990000">0.5f</font><font color="#000000">)</font><font color="#000000">,&nbsp;</font><font color="#3f7f5f">//&nbsp;x0</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">)&nbsp;(</font><font color="#000000">y0&nbsp;+&nbsp;ymin&nbsp;-&nbsp;</font><font color="#990000">0.5f</font><font color="#000000">)</font><font color="#000000">,&nbsp;</font><font color="#3f7f5f">//&nbsp;y0</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">)&nbsp;(</font><font color="#000000">xmax&nbsp;-&nbsp;xmin&nbsp;+&nbsp;</font><font color="#990000">0.5f</font><font color="#000000">)</font><font color="#000000">,&nbsp;</font><font color="#3f7f5f">//&nbsp;width</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#7f0055"><b>int</b></font><font color="#000000">)&nbsp;(</font><font color="#000000">ymax&nbsp;-&nbsp;ymin&nbsp;+&nbsp;</font><font color="#990000">0.5f</font><font color="#000000">))</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;height</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;PolyLine&nbsp;shapes&nbsp;are&nbsp;open&nbsp;curves,&nbsp;with&nbsp;no&nbsp;interior.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;Shape&nbsp;interface&nbsp;says&nbsp;that&nbsp;open&nbsp;curves&nbsp;should&nbsp;be&nbsp;implicitly&nbsp;closed</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;for&nbsp;the&nbsp;purposes&nbsp;of&nbsp;insideness&nbsp;testing.&nbsp;For&nbsp;our&nbsp;purposes,&nbsp;however,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;we&nbsp;define&nbsp;PolyLine&nbsp;shapes&nbsp;to&nbsp;have&nbsp;no&nbsp;interior,&nbsp;and&nbsp;the&nbsp;contains()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;methods&nbsp;always&nbsp;return&nbsp;false.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">contains</font><font color="#000000">(</font><font color="#000000">Point2D&nbsp;p</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">contains</font><font color="#000000">(</font><font color="#000000">Rectangle2D&nbsp;r</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">contains</font><font color="#000000">(</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">x,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">y</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">contains</font><font color="#000000">(</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">x,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">y,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">w,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">h</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;The&nbsp;intersects&nbsp;methods&nbsp;simply&nbsp;test&nbsp;whether&nbsp;any&nbsp;of&nbsp;the&nbsp;line&nbsp;segments</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;within&nbsp;a&nbsp;polyline&nbsp;intersects&nbsp;the&nbsp;given&nbsp;rectangle.&nbsp;Strictly&nbsp;speaking,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;the&nbsp;Shape&nbsp;interface&nbsp;requires&nbsp;us&nbsp;to&nbsp;also&nbsp;check&nbsp;whether&nbsp;the&nbsp;rectangle</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;is&nbsp;entirely&nbsp;contained&nbsp;within&nbsp;the&nbsp;shape&nbsp;as&nbsp;well.&nbsp;But&nbsp;the&nbsp;contains()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;methods&nbsp;for&nbsp;this&nbsp;class&nbsp;alwasy&nbsp;return&nbsp;false.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;We&nbsp;might&nbsp;improve&nbsp;the&nbsp;efficiency&nbsp;of&nbsp;this&nbsp;method&nbsp;by&nbsp;first&nbsp;checking&nbsp;for</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;intersection&nbsp;with&nbsp;the&nbsp;overall&nbsp;bounding&nbsp;box&nbsp;to&nbsp;rule&nbsp;out&nbsp;cases&nbsp;that</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;aren't&nbsp;even&nbsp;close.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">intersects</font><font color="#000000">(</font><font color="#000000">Rectangle2D&nbsp;r</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">numsegs&nbsp;&lt;&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">lastx&nbsp;=&nbsp;x0,&nbsp;lasty&nbsp;=&nbsp;y0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;numsegs;&nbsp;i++</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;loop&nbsp;through&nbsp;the&nbsp;segments</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">x&nbsp;=&nbsp;coords</font><font color="#000000">[</font><font color="#000000">i&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">]&nbsp;</font><font color="#000000">+&nbsp;x0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>float&nbsp;</b></font><font color="#000000">y&nbsp;=&nbsp;coords</font><font color="#000000">[</font><font color="#000000">i&nbsp;*&nbsp;</font><font color="#990000">2&nbsp;</font><font color="#000000">+&nbsp;</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">+&nbsp;y0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;See&nbsp;if&nbsp;this&nbsp;line&nbsp;segment&nbsp;intersects&nbsp;the&nbsp;rectangle</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">r.intersectsLine</font><font color="#000000">(</font><font color="#000000">x,&nbsp;y,&nbsp;lastx,&nbsp;lasty</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Otherwise&nbsp;move&nbsp;on&nbsp;to&nbsp;the&nbsp;next&nbsp;segment</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lastx&nbsp;=&nbsp;x;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">lasty&nbsp;=&nbsp;y;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;No&nbsp;line&nbsp;segment&nbsp;intersected&nbsp;the&nbsp;rectangle</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;variant&nbsp;method&nbsp;is&nbsp;just&nbsp;defined&nbsp;in&nbsp;terms&nbsp;of&nbsp;the&nbsp;last.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">intersects</font><font color="#000000">(</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">x,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">y,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">w,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">h</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">intersects</font><font color="#000000">(</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Rectangle2D.Double</font><font color="#000000">(</font><font color="#000000">x,&nbsp;y,&nbsp;w,&nbsp;h</font><font color="#000000">))</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;is&nbsp;the&nbsp;key&nbsp;to&nbsp;the&nbsp;Shape&nbsp;interface;&nbsp;it&nbsp;tells&nbsp;Java2D&nbsp;how&nbsp;to&nbsp;draw</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;the&nbsp;shape&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;lines&nbsp;and&nbsp;curves.&nbsp;We&nbsp;use&nbsp;only&nbsp;lines</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">PathIterator&nbsp;getPathIterator</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">AffineTransform&nbsp;transform</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">PathIterator</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">curseg&nbsp;=&nbsp;-</font><font color="#990000">1</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;current&nbsp;segment</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Copy&nbsp;the&nbsp;current&nbsp;segment&nbsp;for&nbsp;thread-safety,&nbsp;so&nbsp;we&nbsp;don't</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;mess&nbsp;up&nbsp;of&nbsp;a&nbsp;segment&nbsp;is&nbsp;added&nbsp;while&nbsp;we're&nbsp;iterating</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">numsegs&nbsp;=&nbsp;PolyLine.</font><font color="#7f0055"><b>this</b></font><font color="#000000">.numsegs;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isDone</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">curseg&nbsp;&gt;=&nbsp;numsegs;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">next</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">curseg++;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Get&nbsp;coordinates&nbsp;and&nbsp;type&nbsp;of&nbsp;current&nbsp;segment&nbsp;as&nbsp;floats</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">currentSegment</font><font color="#000000">(</font><font color="#7f0055"><b>float</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">data</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">segtype;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">curseg&nbsp;==&nbsp;-</font><font color="#990000">1</font><font color="#000000">)&nbsp;{&nbsp;</font><font color="#3f7f5f">//&nbsp;First&nbsp;time&nbsp;we're&nbsp;called</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">0</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;x0;&nbsp;</font><font color="#3f7f5f">//&nbsp;Data&nbsp;is&nbsp;the&nbsp;origin&nbsp;point</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;y0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">segtype&nbsp;=&nbsp;SEG_MOVETO;&nbsp;</font><font color="#3f7f5f">//&nbsp;Returned&nbsp;as&nbsp;a&nbsp;moveto&nbsp;segment</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{&nbsp;</font><font color="#3f7f5f">//&nbsp;Otherwise,&nbsp;the&nbsp;data&nbsp;is&nbsp;a&nbsp;segment&nbsp;endpoint</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">0</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;x0&nbsp;+&nbsp;coords</font><font color="#000000">[</font><font color="#000000">curseg&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;y0&nbsp;+&nbsp;coords</font><font color="#000000">[</font><font color="#000000">curseg&nbsp;*&nbsp;</font><font color="#990000">2&nbsp;</font><font color="#000000">+&nbsp;</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">segtype&nbsp;=&nbsp;SEG_LINETO;&nbsp;</font><font color="#3f7f5f">//&nbsp;Returned&nbsp;as&nbsp;a&nbsp;lineto&nbsp;segment</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;If&nbsp;a&nbsp;tranform&nbsp;was&nbsp;specified,&nbsp;transform&nbsp;point&nbsp;in&nbsp;place</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">transform&nbsp;!=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">transform.transform</font><font color="#000000">(</font><font color="#000000">data,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;data,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">segtype;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Same&nbsp;as&nbsp;last&nbsp;method,&nbsp;but&nbsp;use&nbsp;doubles</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">currentSegment</font><font color="#000000">(</font><font color="#7f0055"><b>double</b></font><font color="#000000">[]&nbsp;</font><font color="#000000">data</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">segtype;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">curseg&nbsp;==&nbsp;-</font><font color="#990000">1</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">0</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;x0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;y0;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">segtype&nbsp;=&nbsp;SEG_MOVETO;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>else&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">0</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;x0&nbsp;+&nbsp;coords</font><font color="#000000">[</font><font color="#000000">curseg&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">data</font><font color="#000000">[</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;y0&nbsp;+&nbsp;coords</font><font color="#000000">[</font><font color="#000000">curseg&nbsp;*&nbsp;</font><font color="#990000">2&nbsp;</font><font color="#000000">+&nbsp;</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">segtype&nbsp;=&nbsp;SEG_LINETO;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">transform&nbsp;!=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">transform.transform</font><font color="#000000">(</font><font color="#000000">data,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;data,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">segtype;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;only&nbsp;matters&nbsp;for&nbsp;closed&nbsp;shapes</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">getWindingRule</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">WIND_NON_ZERO;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;PolyLines&nbsp;never&nbsp;contain&nbsp;curves,&nbsp;so&nbsp;we&nbsp;can&nbsp;ignore&nbsp;the&nbsp;flatness&nbsp;limit</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;and&nbsp;implement&nbsp;this&nbsp;method&nbsp;in&nbsp;terms&nbsp;of&nbsp;the&nbsp;one&nbsp;above.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">PathIterator&nbsp;getPathIterator</font><font color="#000000">(</font><font color="#000000">AffineTransform&nbsp;at,&nbsp;</font><font color="#7f0055"><b>double&nbsp;</b></font><font color="#000000">flatness</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">getPathIterator</font><font color="#000000">(</font><font color="#000000">at</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">/*------------------&nbsp;Externalizable&nbsp;---------------------&nbsp;*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;following&nbsp;two&nbsp;methods&nbsp;implement&nbsp;the&nbsp;Externalizable&nbsp;interface.&nbsp;We&nbsp;use</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Externalizable&nbsp;instead&nbsp;of&nbsp;Seralizable&nbsp;so&nbsp;we&nbsp;have&nbsp;full&nbsp;control&nbsp;over&nbsp;the&nbsp;data</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;format,&nbsp;and&nbsp;only&nbsp;write&nbsp;out&nbsp;the&nbsp;defined&nbsp;coordinates</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">writeExternal</font><font color="#000000">(</font><font color="#000000">java.io.ObjectOutput&nbsp;out</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">java.io.IOException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">out.writeFloat</font><font color="#000000">(</font><font color="#000000">x0</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">out.writeFloat</font><font color="#000000">(</font><font color="#000000">y0</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">out.writeInt</font><font color="#000000">(</font><font color="#000000">numsegs</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;numsegs&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">out.writeFloat</font><font color="#000000">(</font><font color="#000000">coords</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">])</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">readExternal</font><font color="#000000">(</font><font color="#000000">java.io.ObjectInput&nbsp;in</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">java.io.IOException,</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">ClassNotFoundException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.x0&nbsp;=&nbsp;in.readFloat</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.y0&nbsp;=&nbsp;in.readFloat</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.numsegs&nbsp;=&nbsp;in.readInt</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.coords&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>float</b></font><font color="#000000">[</font><font color="#000000">numsegs&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;numsegs&nbsp;*&nbsp;</font><font color="#990000">2</font><font color="#000000">;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">coords</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;in.readFloat</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f7f5f">/*------------------&nbsp;Cloneable&nbsp;---------------------&nbsp;*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Override&nbsp;the&nbsp;Object.clone()&nbsp;method&nbsp;so&nbsp;that&nbsp;the&nbsp;array&nbsp;gets&nbsp;cloned,&nbsp;too.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Object&nbsp;clone</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>try&nbsp;</b></font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;copy&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">PolyLine</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>super</b></font><font color="#000000">.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">coords&nbsp;!=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">copy.coords&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#7f0055"><b>float</b></font><font color="#000000">[])&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.coords.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">copy;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}&nbsp;</font><font color="#7f0055"><b>catch&nbsp;</b></font><font color="#000000">(</font><font color="#000000">CloneNotSupportedException&nbsp;e</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">AssertionError</font><font color="#000000">()</font><font color="#000000">;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;should&nbsp;never&nbsp;happen</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f7f5f">/*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Copyright&nbsp;(c)&nbsp;2004&nbsp;David&nbsp;Flanagan.&nbsp;All&nbsp;rights&nbsp;reserved.&nbsp;This&nbsp;code&nbsp;is&nbsp;from&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;book&nbsp;Java&nbsp;Examples&nbsp;in&nbsp;a&nbsp;Nutshell,&nbsp;3nd&nbsp;Edition.&nbsp;It&nbsp;is&nbsp;provided&nbsp;AS-IS,&nbsp;WITHOUT</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;ANY&nbsp;WARRANTY&nbsp;either&nbsp;expressed&nbsp;or&nbsp;implied.&nbsp;You&nbsp;may&nbsp;study,&nbsp;use,&nbsp;and&nbsp;modify&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;for&nbsp;any&nbsp;non-commercial&nbsp;purpose,&nbsp;including&nbsp;teaching&nbsp;and&nbsp;use&nbsp;in&nbsp;open-source</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;projects.&nbsp;You&nbsp;may&nbsp;distribute&nbsp;it&nbsp;non-commercially&nbsp;as&nbsp;long&nbsp;as&nbsp;you&nbsp;retain&nbsp;this</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;notice.&nbsp;For&nbsp;a&nbsp;commercial&nbsp;use&nbsp;license,&nbsp;or&nbsp;to&nbsp;purchase&nbsp;the&nbsp;book,&nbsp;please&nbsp;visit</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;http://www.davidflanagan.com/javaexamples3.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;class&nbsp;implements&nbsp;the&nbsp;Transferable&nbsp;interface&nbsp;for&nbsp;PolyLine&nbsp;objects.&nbsp;It</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;also&nbsp;defines&nbsp;a&nbsp;DataFlavor&nbsp;used&nbsp;to&nbsp;describe&nbsp;this&nbsp;data&nbsp;type.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>class&nbsp;</b></font><font color="#000000">TransferablePolyLine&nbsp;</font><font color="#7f0055"><b>implements&nbsp;</b></font><font color="#000000">Transferable&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;static&nbsp;</b></font><font color="#000000">DataFlavor&nbsp;FLAVOR&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">DataFlavor</font><font color="#000000">(</font><font color="#000000">PolyLine.class,&nbsp;</font><font color="#2a00ff">&#34;PolyLine&#34;</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>static&nbsp;</b></font><font color="#000000">DataFlavor</font><font color="#000000">[]&nbsp;</font><font color="#000000">FLAVORS&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">DataFlavor</font><font color="#000000">[]&nbsp;{&nbsp;</font><font color="#000000">FLAVOR&nbsp;</font><font color="#000000">}</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">PolyLine&nbsp;line;&nbsp;</font><font color="#3f7f5f">//&nbsp;This&nbsp;is&nbsp;the&nbsp;PolyLine&nbsp;we&nbsp;wrap.</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">TransferablePolyLine</font><font color="#000000">(</font><font color="#000000">PolyLine&nbsp;line</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.line&nbsp;=&nbsp;line;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Return&nbsp;the&nbsp;supported&nbsp;flavor&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">DataFlavor</font><font color="#000000">[]&nbsp;</font><font color="#000000">getTransferDataFlavors</font><font color="#000000">()&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">FLAVORS;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Check&nbsp;for&nbsp;the&nbsp;one&nbsp;flavor&nbsp;we&nbsp;support&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isDataFlavorSupported</font><font color="#000000">(</font><font color="#000000">DataFlavor&nbsp;f</font><font color="#000000">)&nbsp;{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">f.equals</font><font color="#000000">(</font><font color="#000000">FLAVOR</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Return&nbsp;the&nbsp;wrapped&nbsp;PolyLine,&nbsp;if&nbsp;the&nbsp;flavor&nbsp;is&nbsp;right&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Object&nbsp;getTransferData</font><font color="#000000">(</font><font color="#000000">DataFlavor&nbsp;f</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">UnsupportedFlavorException&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">!f.equals</font><font color="#000000">(</font><font color="#000000">FLAVOR</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">UnsupportedFlavorException</font><font color="#000000">(</font><font color="#000000">f</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">line;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#000000">}</font></code></div></td>   </tr>
</table>
</td></tr></table><div style='margin-left:10px;'><TABLE width="650"  border=0 cellSpacing=0 cellPadding=0 border=0><TBODY>
<TR><TD align=left><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></TD>
<td align=right><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></td></TR></TBODY></TABLE></div><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
<table cellpadding=0 cellspacing=0 width=800 border=0><tr><td colSpan=5>14.112.Drag Drop</td></tr><tr class=odd><td width=20></td><td width=100>14.112.1.</td><td  align=left><A href="Basicdraganddrop.html">Basic drag and drop</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.2.</td><td  align=left><A href="DraggingTextfromaJLabel.html">Dragging Text from a JLabel</a></td><td width=200><A href="DraggingTextfromaJLabel.html"><IMG border=0 alt="Dragging Text from a JLabel" src="../../JavaImages/DragLabel.png" width=200 height=40></a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.3.</td><td  align=left><A href="DragandDropSupportforImages.html">Drag-and-Drop Support for Images</a></td><td width=200><A href="DragandDropSupportforImages.html"><IMG border=0 alt="Drag-and-Drop Support for Images" src="../../JavaImages/DragImage.png" width=200 height=40></a></td></tr><tr class=even><td width=20></td><td width=100>14.112.4.</td><td  align=left><A href="Draganddropiconsuseaniconproperty.html">Drag and drop icons: use an icon property.</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.5.</td><td  align=left><A href="implementsDragGestureListenerTransferable.html">implements DragGestureListener, Transferable</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.6.</td><td  align=left><A href="Dragginganddroppingtextbetweenatextareaalistandatable.html">Dragging and dropping text between a text area, a list, and a table</a></td><td width=200><A href="Dragginganddroppingtextbetweenatextareaalistandatable.html"><IMG border=0 alt="Dragging and dropping text between a text area, a list, and a table" src="../../JavaImages/ExtendedDnDDemo.png" width=200 height=40></a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.7.</td><td  align=left><A href="DraganddropbetweenJTextAreaandJTextField.html">Drag and drop between JTextArea and JTextField</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.8.</td><td  align=left><A href="TransferbothTextandColorbetweenJTextFieldandJTextArea.html">Transfer both Text and Color between JTextField and JTextArea</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.9.</td><td  align=left><A href="DraganddropbetweenJListandJTextField.html">Drag and drop between JList and JTextField</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.10.</td><td  align=left><A href="DropModeON.html">DropMode.ON</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.11.</td><td  align=left><A href="DropModeINSERT.html">DropMode.INSERT</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.12.</td><td  align=left><A href="DropModeONORINSERT.html">DropMode.ON_OR_INSERT</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.13.</td><td  align=left><A href="SettreeDropModetoDropModeUSESELECTION.html">Set tree DropMode to DropMode.USE_SELECTION</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.14.</td><td  align=left><A href="SettreedragmodetoDropModeON.html">Set tree drag mode to DropMode.ON</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.15.</td><td  align=left><A href="SettreedragmodetoDropModeINSERT.html">Set tree drag mode to DropMode.INSERT</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.16.</td><td  align=left><A href="SettreedragmodetoDropModeONORINSERT.html">Set tree drag mode to DropMode.ON_OR_INSERT</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.17.</td><td  align=left><A href="ChooseDropAction.html">Choose Drop Action</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.18.</td><td  align=left><A href="Variousdropactions.html">Various drop actions</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.19.</td><td  align=left><A href="JTabledraganddrop.html">JTable drag and drop</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.20.</td><td  align=left><A href="Createadragsourceadroptargetandatransferableobject.html">Create a drag source a drop target and a transferable object.</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.21.</td><td  align=left><A href="MakingaComponentDraggable.html">Making a Component Draggable</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.22.</td><td  align=left><A href="Detectadraginitiatinggestureinyourapplication.html">Detect a drag initiating gesture in your application</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.23.</td><td  align=left><A href="IllustratescutcopypasteanddraganddropusingthreeinstancesofJList.html">Illustrates cut, copy, paste and drag and drop using three instances of JList</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.24.</td><td  align=left><A href="Locationsensitivedraganddrop.html">Location sensitive drag and drop</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.25.</td><td  align=left><A href="DemonstrationofthetoplevelTransferHandlersupportonJFrame.html">Demonstration of the top-level TransferHandler support on JFrame</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.26.</td><td  align=left><A href="DragandDropcustomizationdragtheforegroundcolorfromthefirstlabelanddropitasthebackgroundcolorintothesecondone.html">Drag-and-Drop customization: drag the foreground color from the first label and drop it as the background color into the second one</a></td></tr><tr class=odd><td width=20></td><td width=100>14.112.27.</td><td  align=left><A href="DemonstrateshowtoaddcopyanddragsupporttoaSwingcomponentwithTransferHandler.html">Demonstrates how to add copy and drag support to a Swing component with TransferHandler</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.28.</td><td  align=left>ScribblePane allows individual PolyLine lines to be selected, cut, copied, pasted, dragged, and dropped</td></tr><tr class=odd><td width=20></td><td width=100>14.112.29.</td><td  align=left><A href="BuiltindraganddropsupportutilizeaTransferHandlerclass.html">Built-in drag and drop support: utilize a TransferHandler class</a></td></tr><tr class=even><td width=20></td><td width=100>14.112.30.</td><td  align=left><A href="DNDDraganddropList.html">DND Drag and drop List</a></td></tr></table><TABLE border=0><TR><TD height=10></TD></TR></TABLE>
</td></tr></table></td></tr></table><center><TABLE border=0><TR align=left><TD><A href="http://www.techgeniussolutions.com/">techgeniussolutions.com</A>  &nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/contact.htm>Contact Us</A>&nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/ad.htm>Privacy Policy</A></Td></TR><TR align=left><TD class=Templatetext>Copyright 2009 - 12 Demo Source and Support. All rights reserved.</TD></TR><TR align=left><TD>All other trademarks are property of their respective owners.</TD></TR></TABLE></center></BODY>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0240__Swing/ScribblePaneallowsindividualPolyLinelinestobeselectedcutcopiedpasteddraggedanddropped.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:56:03 GMT -->
</HTML>