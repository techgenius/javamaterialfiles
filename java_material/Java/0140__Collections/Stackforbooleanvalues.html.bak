<HTML>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0140__Collections/Stackforbooleanvalues.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:49 GMT -->
<HEAD><title> Stack for boolean values : Stack&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial </title><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta http-equiv="content-style-type" content="text/css"/><meta name="author" content="Demo Source and Support Ltd."/><meta name="copyright" content="2006 Demo Source and Support Ltd."/><meta name="description" CONTENT=" Stack for boolean values : Stack&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial "/><meta name="keywords" CONTENT=" Stack for boolean values : Stack&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial "/><LINK href="../../../style/techgeniussolutions.css" type=text/css rel=stylesheet><link rel="shortcut icon" href="http://www.techgeniussolutions.com/style/favicon.ico"></HEAD><body><H1>Stack for boolean values : Stack&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial</H1><table width=1024 border=0><tr align=left><td width=140 valign=top align=left><table cellpadding=0 cellspacing=0 class=leftBarTable><tr><td class=leftLangCell><A href="http://www.techgeniussolutions.com/">Home</A></td></tr><tr><td><A href="../CatalogJava.html">Java Tutorial</a></td></tr><tr><td><table class=leftBarFolderTable><tr><td valign=top>1.</td><td><A href="../0020__Language/Catalog0020__Language.html">Language</a></td></tr><tr><td valign=top>2.</td><td><A href="../0040__Data-Type/Catalog0040__Data-Type.html">Data Type</a></td></tr><tr><td valign=top>3.</td><td><A href="../0060__Operators/Catalog0060__Operators.html">Operators</a></td></tr><tr><td valign=top>4.</td><td><A href="../0080__Statement-Control/Catalog0080__Statement-Control.html">Statement Control</a></td></tr><tr><td valign=top>5.</td><td><A href="../0100__Class-Definition/Catalog0100__Class-Definition.html">Class Definition</a></td></tr><tr><td valign=top>6.</td><td><A href="../0120__Development/Catalog0120__Development.html">Development</a></td></tr><tr><td valign=top>7.</td><td><A href="../0125__Reflection/Catalog0125__Reflection.html">Reflection</a></td></tr><tr><td valign=top>8.</td><td><A href="../0130__Regular-Expressions/Catalog0130__Regular-Expressions.html">Regular Expressions</a></td></tr><tr><td valign=top>9.</td><td><B>Collections</B></td></tr><tr><td valign=top>10.</td><td><A href="../0160__Thread/Catalog0160__Thread.html">Thread</a></td></tr><tr><td valign=top>11.</td><td><A href="../0180__File/Catalog0180__File.html">File</a></td></tr><tr><td valign=top>12.</td><td><A href="../0200__Generics/Catalog0200__Generics.html">Generics</a></td></tr><tr><td valign=top>13.</td><td><A href="../0220__I18N/Catalog0220__I18N.html">I18N</a></td></tr><tr><td valign=top>14.</td><td><A href="../0240__Swing/Catalog0240__Swing.html">Swing</a></td></tr><tr><td valign=top>15.</td><td><A href="../0260__Swing-Event/Catalog0260__Swing-Event.html">Swing Event</a></td></tr><tr><td valign=top>16.</td><td><A href="../0261__2D-Graphics/Catalog0261__2D-Graphics.html">2D Graphics</a></td></tr><tr><td valign=top>17.</td><td><A href="../0280__SWT/Catalog0280__SWT.html">SWT</a></td></tr><tr><td valign=top>18.</td><td><A href="../0300__SWT-2D-Graphics/Catalog0300__SWT-2D-Graphics.html">SWT 2D Graphics</a></td></tr><tr><td valign=top>19.</td><td><A href="../0320__Network/Catalog0320__Network.html">Network</a></td></tr><tr><td valign=top>20.</td><td><A href="../0340__Database/Catalog0340__Database.html">Database</a></td></tr><tr><td valign=top>21.</td><td><A href="../0350__Hibernate/Catalog0350__Hibernate.html">Hibernate</a></td></tr><tr><td valign=top>22.</td><td><A href="../0355__JPA/Catalog0355__JPA.html">JPA</a></td></tr><tr><td valign=top>23.</td><td><A href="../0360__JSP/Catalog0360__JSP.html">JSP</a></td></tr><tr><td valign=top>24.</td><td><A href="../0380__JSTL/Catalog0380__JSTL.html">JSTL</a></td></tr><tr><td valign=top>25.</td><td><A href="../0400__Servlet/Catalog0400__Servlet.html">Servlet</a></td></tr><tr><td valign=top>26.</td><td><A href="../0410__Web-Services-SOA/Catalog0410__Web-Services-SOA.html">Web Services SOA</a></td></tr><tr><td valign=top>27.</td><td><A href="../0415__EJB3/Catalog0415__EJB3.html">EJB3</a></td></tr><tr><td valign=top>28.</td><td><A href="../0417__Spring/Catalog0417__Spring.html">Spring</a></td></tr><tr><td valign=top>29.</td><td><A href="../0419__PDF/Catalog0419__PDF.html">PDF</a></td></tr><tr><td valign=top>30.</td><td><A href="../0420__Email/Catalog0420__Email.html">Email</a></td></tr><tr><td valign=top>31.</td><td><A href="../0430__J2ME/Catalog0430__J2ME.html">J2ME</a></td></tr><tr><td valign=top>32.</td><td><A href="../0440__J2EE-Application/Catalog0440__J2EE-Application.html">J2EE Application</a></td></tr><tr><td valign=top>33.</td><td><A href="../0440__XML/Catalog0440__XML.html">XML</a></td></tr><tr><td valign=top>34.</td><td><A href="../0460__Design-Pattern/Catalog0460__Design-Pattern.html">Design Pattern</a></td></tr><tr><td valign=top>35.</td><td><A href="../0480__Log/Catalog0480__Log.html">Log</a></td></tr><tr><td valign=top>36.</td><td><A href="../0490__Security/Catalog0490__Security.html">Security</a></td></tr><tr><td valign=top>37.</td><td><A href="../0500__Apache-Common/Catalog0500__Apache-Common.html">Apache Common</a></td></tr><tr><td valign=top>38.</td><td><A href="../0520__Ant/Catalog0520__Ant.html">Ant</a></td></tr><tr><td valign=top>39.</td><td><A href="../0540__JUnit/Catalog0540__JUnit.html">JUnit</a></td></tr></table></td></tr></table></td><td width=2px></td><td valign=top><TABLE class=googleBar width=800 cellSpacing=0 cellPadding=0 border=0><TBODY><TR><TD width=60%><A href="../CatalogJava.html">Java Tutorial</a>&nbsp;&raquo;&nbsp;<A href="Catalog0140__Collections.html">Collections</a>&nbsp;&raquo;&nbsp;<A href="0200__Stack.html">Stack</a></TD><TD align=right width=10%>&nbsp;</TD><TD align=right height=80% width=30%><form action="http://www.google.com/cse" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="15" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script></TD></FORM> </TD></TR></TBODY></TABLE><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed.html";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><table width=800 border=0><tr><td class=codeTitle>9.13.17.Stack for boolean values<span style='font-SIZE:80%;float:right'><a href='Growableintstackwithtypespecificaccessmethods.html'>Previous</a>/<a href='extendsArrayListTtocreateStack.html'>Next</a></td></tr><tr><td><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
</td></tr><tr><td><table border="0" cellpadding="3" cellspacing="0" bgcolor="#ffffff">
   <tr>
<td nowrap="nowrap" valign="top" align="left"><div class="codeShade"><code><font color="#3f7f5f">/*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Licensed&nbsp;to&nbsp;the&nbsp;Apache&nbsp;Software&nbsp;Foundation&nbsp;(ASF)&nbsp;under&nbsp;one</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;or&nbsp;more&nbsp;contributor&nbsp;license&nbsp;agreements.&nbsp;See&nbsp;the&nbsp;NOTICE&nbsp;file</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;distributed&nbsp;with&nbsp;this&nbsp;work&nbsp;for&nbsp;additional&nbsp;information</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;regarding&nbsp;copyright&nbsp;ownership.&nbsp;The&nbsp;ASF&nbsp;licenses&nbsp;this&nbsp;file</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;to&nbsp;you&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&nbsp;&#34;License&#34;);</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;&#34;AS&nbsp;IS&#34;&nbsp;BASIS,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*/</font><br/>
<font color="#3f7f5f">/*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*&nbsp;$Id:&nbsp;BoolStack.java&nbsp;468655&nbsp;2006-10-28&nbsp;07:12:06Z&nbsp;minchau&nbsp;$</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f7f5f">*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Simple&nbsp;stack&nbsp;for&nbsp;boolean&nbsp;values.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;@xsl.usage&nbsp;internal</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>public&nbsp;final&nbsp;class&nbsp;</b></font><font color="#000000">BoolStack&nbsp;</font><font color="#7f0055"><b>implements&nbsp;</b></font><font color="#000000">Cloneable</font><br/>
<font color="#000000">{</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Array&nbsp;of&nbsp;boolean&nbsp;values&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">m_values</font><font color="#000000">[]</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Array&nbsp;size&nbsp;allocated&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">m_allocatedSize;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**&nbsp;Index&nbsp;into&nbsp;the&nbsp;array&nbsp;of&nbsp;booleans&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">m_index;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Default&nbsp;constructor.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;default</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;block&nbsp;size&nbsp;is&nbsp;very&nbsp;small,&nbsp;for&nbsp;small&nbsp;lists.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">BoolStack</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">(</font><font color="#990000">32</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Construct&nbsp;a&nbsp;IntVector,&nbsp;using&nbsp;the&nbsp;given&nbsp;block&nbsp;size.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">size&nbsp;array&nbsp;size&nbsp;to&nbsp;allocate</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">BoolStack</font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">size</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_allocatedSize&nbsp;=&nbsp;size;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_values&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>boolean</b></font><font color="#000000">[</font><font color="#000000">size</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_index&nbsp;=&nbsp;-</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Get&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;list.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">Current&nbsp;length&nbsp;of&nbsp;the&nbsp;list</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">size</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">m_index&nbsp;+&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Clears&nbsp;the&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">clear</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_index&nbsp;=&nbsp;-</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Pushes&nbsp;an&nbsp;item&nbsp;onto&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">val&nbsp;the&nbsp;boolean&nbsp;to&nbsp;be&nbsp;pushed&nbsp;onto&nbsp;this&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;&nbsp;</font><font color="#3f5fbf">the&nbsp;&lt;code&gt;item&lt;/code&gt;&nbsp;argument.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">push</font><font color="#000000">(</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">val</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">m_index&nbsp;==&nbsp;m_allocatedSize&nbsp;-&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">grow</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">m_values</font><font color="#000000">[</font><font color="#000000">++m_index</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;val</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Removes&nbsp;the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack&nbsp;and&nbsp;returns&nbsp;that</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;object&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;this&nbsp;function.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">The&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;&nbsp;</font><font color="#3f5fbf">EmptyStackException&nbsp;&nbsp;if&nbsp;this&nbsp;stack&nbsp;is&nbsp;empty.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">pop</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">m_values</font><font color="#000000">[</font><font color="#000000">m_index--</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Removes&nbsp;the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack&nbsp;and&nbsp;returns&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;next&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;this&nbsp;function.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">Next&nbsp;object&nbsp;to&nbsp;the&nbsp;top&nbsp;or&nbsp;false&nbsp;if&nbsp;none&nbsp;there</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">popAndTop</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_index--;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">m_index&nbsp;&gt;=&nbsp;</font><font color="#990000">0</font><font color="#000000">)&nbsp;</font><font color="#000000">?&nbsp;m_values</font><font color="#000000">[</font><font color="#000000">m_index</font><font color="#000000">]&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#7f0055"><b>false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Set&nbsp;the&nbsp;item&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack&nbsp;&nbsp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">b&nbsp;Object&nbsp;to&nbsp;set&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">setTop</font><font color="#000000">(</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">b</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_values</font><font color="#000000">[</font><font color="#000000">m_index</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;b;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Looks&nbsp;at&nbsp;the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack&nbsp;without&nbsp;removing&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;from&nbsp;the&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;&nbsp;</font><font color="#3f5fbf">EmptyStackException&nbsp;&nbsp;if&nbsp;this&nbsp;stack&nbsp;is&nbsp;empty.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">peek</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">m_values</font><font color="#000000">[</font><font color="#000000">m_index</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Looks&nbsp;at&nbsp;the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack&nbsp;without&nbsp;removing&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;from&nbsp;the&nbsp;stack.&nbsp;&nbsp;If&nbsp;the&nbsp;stack&nbsp;is&nbsp;empty,&nbsp;it&nbsp;returns&nbsp;false.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">peekOrFalse</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">m_index&nbsp;&gt;&nbsp;-</font><font color="#990000">1</font><font color="#000000">)&nbsp;</font><font color="#000000">?&nbsp;m_values</font><font color="#000000">[</font><font color="#000000">m_index</font><font color="#000000">]&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#7f0055"><b>false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Looks&nbsp;at&nbsp;the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack&nbsp;without&nbsp;removing&nbsp;it</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;from&nbsp;the&nbsp;stack.&nbsp;&nbsp;If&nbsp;the&nbsp;stack&nbsp;is&nbsp;empty,&nbsp;it&nbsp;returns&nbsp;true.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">the&nbsp;object&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;this&nbsp;stack.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">peekOrTrue</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">m_index&nbsp;&gt;&nbsp;-</font><font color="#990000">1</font><font color="#000000">)&nbsp;</font><font color="#000000">?&nbsp;m_values</font><font color="#000000">[</font><font color="#000000">m_index</font><font color="#000000">]&nbsp;</font><font color="#000000">:&nbsp;</font><font color="#7f0055"><b>true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Tests&nbsp;if&nbsp;this&nbsp;stack&nbsp;is&nbsp;empty.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;&nbsp;</font><font color="#3f5fbf">&lt;code&gt;true&lt;/code&gt;&nbsp;if&nbsp;this&nbsp;stack&nbsp;is&nbsp;empty;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;code&gt;false&lt;/code&gt;&nbsp;otherwise.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isEmpty</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">(</font><font color="#000000">m_index&nbsp;==&nbsp;-</font><font color="#990000">1</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Grows&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;stack</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">grow</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_allocatedSize&nbsp;*=&nbsp;</font><font color="#990000">2</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">newVector</font><font color="#000000">[]&nbsp;</font><font color="#000000">=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#7f0055"><b>boolean</b></font><font color="#000000">[</font><font color="#000000">m_allocatedSize</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">System.arraycopy</font><font color="#000000">(</font><font color="#000000">m_values,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;newVector,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;m_index&nbsp;+&nbsp;</font><font color="#990000">1</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">m_values&nbsp;=&nbsp;newVector;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Object&nbsp;clone</font><font color="#000000">()&nbsp;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">CloneNotSupportedException</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;super</b></font><font color="#000000">.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#000000">}</font></code></div></td>   </tr>
</table>
</td></tr></table><div style='margin-left:10px;'><TABLE width="650"  border=0 cellSpacing=0 cellPadding=0 border=0><TBODY>
<TR><TD align=left><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></TD>
<td align=right><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></td></TR></TBODY></TABLE></div><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
<table cellpadding=0 cellspacing=0 width=800 border=0><tr><td colSpan=5>9.13.Stack</td></tr><tr class=odd><td width=20></td><td width=100>9.13.1.</td><td  align=left><A href="StackBasicslastinfirstoutbehavior.html">Stack Basics: last-in, first-out behavior</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.2.</td><td  align=left><A href="AddingElementsToaddanelementtoastackcallthepushmethod.html">Adding Elements: To add an element to a stack, call the push() method</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.3.</td><td  align=left><A href="RemovingElementsToremoveanelementfromthestackthepopmethod.html">Removing Elements: To remove an element from the stack, the pop() method</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.4.</td><td  align=left><A href="Ifthesizeofthestackiszerotrueisreturnedotherwisefalseisreturned.html">If the size of the stack is zero, true is returned; otherwise, false is returned</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.5.</td><td  align=left><A href="CheckingtheTopTogettheelementwithoutremovingusingthepeekmethod.html">Checking the Top: To get the element without removing: using the peek() method</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.6.</td><td  align=left><A href="Tofindoutifanelementisonthestackthesearchmethod.html">To find out if an element is on the stack: the search() method</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.7.</td><td  align=left><A href="DemonstratethegenericStackclass.html">Demonstrate the generic Stack class.</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.8.</td><td  align=left><A href="Afastersmallerstackimplementation.html">A faster, smaller stack implementation.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.9.</td><td  align=left><A href="Asimpleintegerbasedstack.html">A simple integer based stack.</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.10.</td><td  align=left><A href="Astackofsimpleintegers.html">A stack of simple integers</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.11.</td><td  align=left><A href="AverysimpleunsynchronizedstackThisoneisfasterthanthejavautilVersion.html">A very simple unsynchronized stack. This one is faster than the java.util-Version.</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.12.</td><td  align=left><A href="AnimplementationofthejavautilStackbasedonanArrayListinsteadofaVectorsoitisnotsynchronizedtoprotectagainstmultithreadedaccess.html">An implementation of the java.util.Stack based on an ArrayList instead of a Vector, so it is not synchronized to protect against multi-threaded access.</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.13.</td><td  align=left><A href="CharacterStack.html">Character Stack</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.14.</td><td  align=left><A href="GrowableObjectstackwithtypespecificaccessmethods.html">Growable Object stack with type specific access methods</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.15.</td><td  align=left><A href="GrowableStringstackwithtypespecificaccessmethods.html">Growable String stack with type specific access methods.</a></td></tr><tr class=even><td width=20></td><td width=100>9.13.16.</td><td  align=left><A href="Growableintstackwithtypespecificaccessmethods.html">Growable int stack with type specific access methods</a></td></tr><tr class=odd><td width=20></td><td width=100>9.13.17.</td><td  align=left>Stack for boolean values</td></tr><tr class=even><td width=20></td><td width=100>9.13.18.</td><td  align=left><A href="extendsArrayListTtocreateStack.html">extends ArrayList<T> to create Stack</a></td></tr></table><TABLE border=0><TR><TD height=10></TD></TR></TABLE>
</td></tr></table></td></tr></table><center><TABLE border=0><TR align=left><TD><A href="http://www.techgeniussolutions.com/">techgeniussolutions.com</A>  &nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/contact.htm>Contact Us</A>&nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/ad.htm>Privacy Policy</A></Td></TR><TR align=left><TD class=Templatetext>Copyright 2009 - 12 Demo Source and Support. All rights reserved.</TD></TR><TR align=left><TD>All other trademarks are property of their respective owners.</TD></TR></TABLE></center></BODY>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0140__Collections/Stackforbooleanvalues.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:49 GMT -->
</HTML>