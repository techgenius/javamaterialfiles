<HTML>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0140__Collections/WeakReferencelistusesjavalangrefWeakReferencestostoreitscontents.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:52 GMT -->
<HEAD><title> WeakReference list uses java.lang.ref.WeakReferences to store its contents. : Reference&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial </title><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta http-equiv="content-style-type" content="text/css"/><meta name="author" content="Demo Source and Support Ltd."/><meta name="copyright" content="2006 Demo Source and Support Ltd."/><meta name="description" CONTENT=" WeakReference list uses java.lang.ref.WeakReferences to store its contents. : Reference&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial "/><meta name="keywords" CONTENT=" WeakReference list uses java.lang.ref.WeakReferences to store its contents. : Reference&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial "/><LINK href="../../../style/techgeniussolutions.css" type=text/css rel=stylesheet><link rel="shortcut icon" href="http://www.techgeniussolutions.com/style/favicon.ico"></HEAD><body><H1>WeakReference list uses java.lang.ref.WeakReferences to store its contents. : Reference&nbsp;&laquo;&nbsp;Collections&nbsp;&laquo;&nbsp;Java Tutorial</H1><table width=1024 border=0><tr align=left><td width=140 valign=top align=left><table cellpadding=0 cellspacing=0 class=leftBarTable><tr><td class=leftLangCell><A href="http://www.techgeniussolutions.com/">Home</A></td></tr><tr><td><A href="../CatalogJava.html">Java Tutorial</a></td></tr><tr><td><table class=leftBarFolderTable><tr><td valign=top>1.</td><td><A href="../0020__Language/Catalog0020__Language.html">Language</a></td></tr><tr><td valign=top>2.</td><td><A href="../0040__Data-Type/Catalog0040__Data-Type.html">Data Type</a></td></tr><tr><td valign=top>3.</td><td><A href="../0060__Operators/Catalog0060__Operators.html">Operators</a></td></tr><tr><td valign=top>4.</td><td><A href="../0080__Statement-Control/Catalog0080__Statement-Control.html">Statement Control</a></td></tr><tr><td valign=top>5.</td><td><A href="../0100__Class-Definition/Catalog0100__Class-Definition.html">Class Definition</a></td></tr><tr><td valign=top>6.</td><td><A href="../0120__Development/Catalog0120__Development.html">Development</a></td></tr><tr><td valign=top>7.</td><td><A href="../0125__Reflection/Catalog0125__Reflection.html">Reflection</a></td></tr><tr><td valign=top>8.</td><td><A href="../0130__Regular-Expressions/Catalog0130__Regular-Expressions.html">Regular Expressions</a></td></tr><tr><td valign=top>9.</td><td><B>Collections</B></td></tr><tr><td valign=top>10.</td><td><A href="../0160__Thread/Catalog0160__Thread.html">Thread</a></td></tr><tr><td valign=top>11.</td><td><A href="../0180__File/Catalog0180__File.html">File</a></td></tr><tr><td valign=top>12.</td><td><A href="../0200__Generics/Catalog0200__Generics.html">Generics</a></td></tr><tr><td valign=top>13.</td><td><A href="../0220__I18N/Catalog0220__I18N.html">I18N</a></td></tr><tr><td valign=top>14.</td><td><A href="../0240__Swing/Catalog0240__Swing.html">Swing</a></td></tr><tr><td valign=top>15.</td><td><A href="../0260__Swing-Event/Catalog0260__Swing-Event.html">Swing Event</a></td></tr><tr><td valign=top>16.</td><td><A href="../0261__2D-Graphics/Catalog0261__2D-Graphics.html">2D Graphics</a></td></tr><tr><td valign=top>17.</td><td><A href="../0280__SWT/Catalog0280__SWT.html">SWT</a></td></tr><tr><td valign=top>18.</td><td><A href="../0300__SWT-2D-Graphics/Catalog0300__SWT-2D-Graphics.html">SWT 2D Graphics</a></td></tr><tr><td valign=top>19.</td><td><A href="../0320__Network/Catalog0320__Network.html">Network</a></td></tr><tr><td valign=top>20.</td><td><A href="../0340__Database/Catalog0340__Database.html">Database</a></td></tr><tr><td valign=top>21.</td><td><A href="../0350__Hibernate/Catalog0350__Hibernate.html">Hibernate</a></td></tr><tr><td valign=top>22.</td><td><A href="../0355__JPA/Catalog0355__JPA.html">JPA</a></td></tr><tr><td valign=top>23.</td><td><A href="../0360__JSP/Catalog0360__JSP.html">JSP</a></td></tr><tr><td valign=top>24.</td><td><A href="../0380__JSTL/Catalog0380__JSTL.html">JSTL</a></td></tr><tr><td valign=top>25.</td><td><A href="../0400__Servlet/Catalog0400__Servlet.html">Servlet</a></td></tr><tr><td valign=top>26.</td><td><A href="../0410__Web-Services-SOA/Catalog0410__Web-Services-SOA.html">Web Services SOA</a></td></tr><tr><td valign=top>27.</td><td><A href="../0415__EJB3/Catalog0415__EJB3.html">EJB3</a></td></tr><tr><td valign=top>28.</td><td><A href="../0417__Spring/Catalog0417__Spring.html">Spring</a></td></tr><tr><td valign=top>29.</td><td><A href="../0419__PDF/Catalog0419__PDF.html">PDF</a></td></tr><tr><td valign=top>30.</td><td><A href="../0420__Email/Catalog0420__Email.html">Email</a></td></tr><tr><td valign=top>31.</td><td><A href="../0430__J2ME/Catalog0430__J2ME.html">J2ME</a></td></tr><tr><td valign=top>32.</td><td><A href="../0440__J2EE-Application/Catalog0440__J2EE-Application.html">J2EE Application</a></td></tr><tr><td valign=top>33.</td><td><A href="../0440__XML/Catalog0440__XML.html">XML</a></td></tr><tr><td valign=top>34.</td><td><A href="../0460__Design-Pattern/Catalog0460__Design-Pattern.html">Design Pattern</a></td></tr><tr><td valign=top>35.</td><td><A href="../0480__Log/Catalog0480__Log.html">Log</a></td></tr><tr><td valign=top>36.</td><td><A href="../0490__Security/Catalog0490__Security.html">Security</a></td></tr><tr><td valign=top>37.</td><td><A href="../0500__Apache-Common/Catalog0500__Apache-Common.html">Apache Common</a></td></tr><tr><td valign=top>38.</td><td><A href="../0520__Ant/Catalog0520__Ant.html">Ant</a></td></tr><tr><td valign=top>39.</td><td><A href="../0540__JUnit/Catalog0540__JUnit.html">JUnit</a></td></tr></table></td></tr></table></td><td width=2px></td><td valign=top><TABLE class=googleBar width=800 cellSpacing=0 cellPadding=0 border=0><TBODY><TR><TD width=60%><A href="../CatalogJava.html">Java Tutorial</a>&nbsp;&raquo;&nbsp;<A href="Catalog0140__Collections.html">Collections</a>&nbsp;&raquo;&nbsp;<A href="0780__Reference.html">Reference</a></TD><TD align=right width=10%>&nbsp;</TD><TD align=right height=80% width=30%><form action="http://www.google.com/cse" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="15" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script></TD></FORM> </TD></TR></TBODY></TABLE><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed.html";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><table width=800 border=0><tr><td class=codeTitle>9.56.3.WeakReference list uses java.lang.ref.WeakReferences to store its contents.<span style='font-SIZE:80%;float:right'><a href='CachebasedonSoftReference.html'>Previous</a>/<a href='../0160__Thread/CreatingaThread.html'>Next</a></td></tr><tr><td><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
</td></tr><tr><td><table border="0" cellpadding="3" cellspacing="0" bgcolor="#ffffff">
   <tr>
<td nowrap="nowrap" valign="top" align="left"><div class="codeShade"><code><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;JFreeReport&nbsp;:&nbsp;a&nbsp;free&nbsp;Java&nbsp;reporting&nbsp;library</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Project&nbsp;Info:&nbsp;&nbsp;http://reporting.pentaho.org/</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;(C)&nbsp;Copyright&nbsp;2001-2007,&nbsp;by&nbsp;Object&nbsp;Refinery&nbsp;Ltd,&nbsp;Pentaho&nbsp;Corporation&nbsp;and&nbsp;Contributors.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;library&nbsp;is&nbsp;free&nbsp;software;&nbsp;you&nbsp;can&nbsp;redistribute&nbsp;it&nbsp;and/or&nbsp;modify&nbsp;it&nbsp;under&nbsp;the&nbsp;terms</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;of&nbsp;the&nbsp;GNU&nbsp;Lesser&nbsp;General&nbsp;Public&nbsp;License&nbsp;as&nbsp;published&nbsp;by&nbsp;the&nbsp;Free&nbsp;Software&nbsp;Foundation;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;either&nbsp;version&nbsp;2.1&nbsp;of&nbsp;the&nbsp;License,&nbsp;or&nbsp;(at&nbsp;your&nbsp;option)&nbsp;any&nbsp;later&nbsp;version.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;library&nbsp;is&nbsp;distributed&nbsp;in&nbsp;the&nbsp;hope&nbsp;that&nbsp;it&nbsp;will&nbsp;be&nbsp;useful,&nbsp;but&nbsp;WITHOUT&nbsp;ANY&nbsp;WARRANTY;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;without&nbsp;even&nbsp;the&nbsp;implied&nbsp;warranty&nbsp;of&nbsp;MERCHANTABILITY&nbsp;or&nbsp;FITNESS&nbsp;FOR&nbsp;A&nbsp;PARTICULAR&nbsp;PURPOSE.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;See&nbsp;the&nbsp;GNU&nbsp;Lesser&nbsp;General&nbsp;Public&nbsp;License&nbsp;for&nbsp;more&nbsp;details.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;You&nbsp;should&nbsp;have&nbsp;received&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;GNU&nbsp;Lesser&nbsp;General&nbsp;Public&nbsp;License&nbsp;along&nbsp;with&nbsp;this</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;library;&nbsp;if&nbsp;not,&nbsp;write&nbsp;to&nbsp;the&nbsp;Free&nbsp;Software&nbsp;Foundation,&nbsp;Inc.,&nbsp;59&nbsp;Temple&nbsp;Place,&nbsp;Suite&nbsp;330,</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Boston,&nbsp;MA&nbsp;02111-1307,&nbsp;USA.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;[Java&nbsp;is&nbsp;a&nbsp;trademark&nbsp;or&nbsp;registered&nbsp;trademark&nbsp;of&nbsp;Sun&nbsp;Microsystems,&nbsp;Inc.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;in&nbsp;the&nbsp;United&nbsp;States&nbsp;and&nbsp;other&nbsp;countries.]</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;------------</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;WeakReferenceList.java</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;------------</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;(C)&nbsp;Copyright&nbsp;2001-2007,&nbsp;by&nbsp;Object&nbsp;Refinery&nbsp;Ltd,&nbsp;Pentaho&nbsp;Corporation&nbsp;and&nbsp;Contributors.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff"></font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.io.IOException;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.io.ObjectInputStream;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.io.Serializable;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.lang.ref.Reference;</font><br/>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.lang.ref.WeakReference;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;WeakReference&nbsp;list&nbsp;uses&nbsp;&lt;code&gt;java.lang.ref.WeakReference&lt;/code&gt;s&nbsp;to&nbsp;store&nbsp;its&nbsp;contents.&nbsp;In&nbsp;contrast&nbsp;to&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;WeakHashtable,&nbsp;this&nbsp;list&nbsp;knows&nbsp;how&nbsp;to&nbsp;restore&nbsp;missing&nbsp;content,&nbsp;so&nbsp;that&nbsp;garbage&nbsp;collected&nbsp;elements&nbsp;can&nbsp;be&nbsp;restored</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;when&nbsp;they&nbsp;are&nbsp;accessed.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;By&nbsp;default&nbsp;this&nbsp;list&nbsp;can&nbsp;contain&nbsp;25&nbsp;elements,&nbsp;where&nbsp;the&nbsp;first&nbsp;element&nbsp;is&nbsp;stored&nbsp;using&nbsp;a&nbsp;strong&nbsp;reference,&nbsp;which&nbsp;is</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;not&nbsp;garbage&nbsp;collected.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Restoring&nbsp;the&nbsp;elements&nbsp;is&nbsp;not&nbsp;implemented,&nbsp;concrete&nbsp;implementations&nbsp;will&nbsp;have&nbsp;to&nbsp;override&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;code&gt;restoreChild(int)&lt;/code&gt;&nbsp;method.&nbsp;The&nbsp;&lt;code&gt;getMaxChildCount&lt;/code&gt;&nbsp;method&nbsp;defines&nbsp;the&nbsp;maxmimum&nbsp;number&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;children&nbsp;in&nbsp;the&nbsp;list.&nbsp;When&nbsp;more&nbsp;than&nbsp;&lt;code&gt;maxChildCount&lt;/code&gt;&nbsp;elements&nbsp;are&nbsp;contained&nbsp;in&nbsp;this&nbsp;list,&nbsp;add&nbsp;will&nbsp;always</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;return&nbsp;false&nbsp;to&nbsp;indicate&nbsp;that&nbsp;adding&nbsp;the&nbsp;element&nbsp;failed.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;To&nbsp;customize&nbsp;the&nbsp;list,&nbsp;override&nbsp;createReference&nbsp;to&nbsp;create&nbsp;a&nbsp;different&nbsp;kind&nbsp;of&nbsp;reference.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;This&nbsp;list&nbsp;is&nbsp;able&nbsp;to&nbsp;add&nbsp;or&nbsp;replace&nbsp;elements,&nbsp;but&nbsp;inserting&nbsp;or&nbsp;removing&nbsp;of&nbsp;elements&nbsp;is&nbsp;not&nbsp;possible.</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@author&nbsp;</font><font color="#3f5fbf">Thomas&nbsp;Morgner</font><br/>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#7f0055"><b>public&nbsp;abstract&nbsp;class&nbsp;</b></font><font color="#000000">WeakReferenceList&nbsp;</font><font color="#7f0055"><b>implements&nbsp;</b></font><font color="#000000">Serializable,&nbsp;Cloneable</font><br/>
<font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;master&nbsp;element.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#000000">Object&nbsp;master;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Storage&nbsp;for&nbsp;the&nbsp;references.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;transient&nbsp;</b></font><font color="#000000">Reference</font><font color="#000000">[]&nbsp;</font><font color="#000000">childs;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;current&nbsp;number&nbsp;of&nbsp;elements.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">size;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">maxChilds;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Creates&nbsp;a&nbsp;new&nbsp;weak&nbsp;reference&nbsp;list.&nbsp;The&nbsp;storage&nbsp;of&nbsp;the&nbsp;list&nbsp;is&nbsp;limited&nbsp;to&nbsp;getMaxChildCount()&nbsp;elements.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">maxChildCount&nbsp;the&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;</b></font><font color="#000000">WeakReferenceList</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">maxChildCount</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.maxChilds&nbsp;=&nbsp;maxChildCount;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>this</b></font><font color="#000000">.childs&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Reference</font><font color="#000000">[</font><font color="#000000">maxChildCount&nbsp;-&nbsp;</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Returns&nbsp;the&nbsp;maximum&nbsp;number&nbsp;of&nbsp;children&nbsp;in&nbsp;this&nbsp;list.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">the&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;in&nbsp;this&nbsp;list.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">getMaxChildCount</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">maxChilds;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Returns&nbsp;the&nbsp;master&nbsp;element&nbsp;of&nbsp;this&nbsp;list.&nbsp;The&nbsp;master&nbsp;element&nbsp;is&nbsp;the&nbsp;element&nbsp;stored&nbsp;by&nbsp;a&nbsp;strong&nbsp;reference&nbsp;and&nbsp;cannot</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;be&nbsp;garbage&nbsp;collected.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">the&nbsp;master&nbsp;element</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;</b></font><font color="#000000">Object&nbsp;getMaster</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">master;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Attempts&nbsp;to&nbsp;restore&nbsp;the&nbsp;child&nbsp;stored&nbsp;on&nbsp;the&nbsp;given&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">index&nbsp;the&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">null&nbsp;if&nbsp;the&nbsp;child&nbsp;could&nbsp;not&nbsp;be&nbsp;restored&nbsp;or&nbsp;the&nbsp;restored&nbsp;child.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;abstract&nbsp;</b></font><font color="#000000">Object&nbsp;restoreChild</font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">index</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Returns&nbsp;the&nbsp;child&nbsp;stored&nbsp;at&nbsp;the&nbsp;given&nbsp;index.&nbsp;If&nbsp;the&nbsp;child&nbsp;has&nbsp;been&nbsp;garbage&nbsp;collected,&nbsp;it&nbsp;gets&nbsp;restored&nbsp;using&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;restoreChild&nbsp;function.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">index&nbsp;the&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">the&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Object&nbsp;get</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">index</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isMaster</font><font color="#000000">(</font><font color="#000000">index</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">master;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else</b></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">Reference&nbsp;ref&nbsp;=&nbsp;childs</font><font color="#000000">[</font><font color="#000000">getChildPos</font><font color="#000000">(</font><font color="#000000">index</font><font color="#000000">)]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">ref&nbsp;==&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throw&nbsp;new&nbsp;</b></font><font color="#000000">IllegalStateException</font><font color="#000000">(</font><font color="#2a00ff">&#34;State:&nbsp;&#34;&nbsp;</font><font color="#000000">+&nbsp;index</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Object&nbsp;ob&nbsp;=&nbsp;ref.get</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">ob&nbsp;==&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">ob&nbsp;=&nbsp;restoreChild</font><font color="#000000">(</font><font color="#000000">index</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">childs</font><font color="#000000">[</font><font color="#000000">getChildPos</font><font color="#000000">(</font><font color="#000000">index</font><font color="#000000">)]&nbsp;</font><font color="#000000">=&nbsp;createReference</font><font color="#000000">(</font><font color="#000000">ob</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">ob;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Replaces&nbsp;the&nbsp;child&nbsp;stored&nbsp;at&nbsp;the&nbsp;given&nbsp;index&nbsp;with&nbsp;the&nbsp;new&nbsp;child&nbsp;which&nbsp;can&nbsp;be&nbsp;null.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">report&nbsp;the&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">index&nbsp;&nbsp;the&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">set</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">Object&nbsp;report,&nbsp;</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">index</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">isMaster</font><font color="#000000">(</font><font color="#000000">index</font><font color="#000000">))</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">master&nbsp;=&nbsp;report;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else</b></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">childs</font><font color="#000000">[</font><font color="#000000">getChildPos</font><font color="#000000">(</font><font color="#000000">index</font><font color="#000000">)]&nbsp;</font><font color="#000000">=&nbsp;createReference</font><font color="#000000">(</font><font color="#000000">report</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Creates&nbsp;a&nbsp;new&nbsp;reference&nbsp;for&nbsp;the&nbsp;given&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">o&nbsp;the&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">a&nbsp;WeakReference&nbsp;for&nbsp;the&nbsp;object&nbsp;o&nbsp;without&nbsp;any&nbsp;ReferenceQueue&nbsp;attached.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#000000">Reference&nbsp;createReference</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">Object&nbsp;o</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;new&nbsp;</b></font><font color="#000000">WeakReference</font><font color="#000000">(</font><font color="#000000">o</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Adds&nbsp;the&nbsp;element&nbsp;to&nbsp;the&nbsp;list.&nbsp;If&nbsp;the&nbsp;maximum&nbsp;size&nbsp;of&nbsp;the&nbsp;list&nbsp;is&nbsp;exceeded,&nbsp;this&nbsp;function&nbsp;returns&nbsp;false&nbsp;to&nbsp;indicate</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;that&nbsp;adding&nbsp;failed.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">rs&nbsp;the&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">true,&nbsp;if&nbsp;the&nbsp;object&nbsp;was&nbsp;successfully&nbsp;added&nbsp;to&nbsp;the&nbsp;list,&nbsp;false&nbsp;otherwise</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">add</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">Object&nbsp;rs</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">size&nbsp;==&nbsp;</font><font color="#990000">0</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">master&nbsp;=&nbsp;rs;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">size&nbsp;=&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else</b></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if&nbsp;</b></font><font color="#000000">(</font><font color="#000000">size&nbsp;&lt;&nbsp;getMaxChildCount</font><font color="#000000">())</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">childs</font><font color="#000000">[</font><font color="#000000">size&nbsp;-&nbsp;</font><font color="#990000">1</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;createReference</font><font color="#000000">(</font><font color="#000000">rs</font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">size++;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;true</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else</b></font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;was&nbsp;not&nbsp;able&nbsp;to&nbsp;add&nbsp;this&nbsp;to&nbsp;this&nbsp;list,&nbsp;maximum&nbsp;number&nbsp;of&nbsp;entries&nbsp;reached.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;false</b></font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Returns&nbsp;true,&nbsp;if&nbsp;the&nbsp;given&nbsp;index&nbsp;denotes&nbsp;a&nbsp;master&nbsp;index&nbsp;of&nbsp;this&nbsp;list.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">index&nbsp;the&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">true&nbsp;if&nbsp;the&nbsp;index&nbsp;is&nbsp;a&nbsp;master&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;</b></font><font color="#7f0055"><b>boolean&nbsp;</b></font><font color="#000000">isMaster</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">index</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">index&nbsp;%&nbsp;getMaxChildCount</font><font color="#000000">()&nbsp;</font><font color="#000000">==&nbsp;</font><font color="#990000">0</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Returns&nbsp;the&nbsp;internal&nbsp;storage&nbsp;position&nbsp;for&nbsp;the&nbsp;child.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">index&nbsp;the&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">the&nbsp;internal&nbsp;storage&nbsp;index.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">getChildPos</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">index</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">index&nbsp;%&nbsp;getMaxChildCount</font><font color="#000000">()&nbsp;</font><font color="#000000">-&nbsp;</font><font color="#990000">1</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Returns&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;list.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">the&nbsp;size.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">getSize</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">size;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Serialisation&nbsp;support.&nbsp;The&nbsp;transient&nbsp;child&nbsp;elements&nbsp;were&nbsp;not&nbsp;saved.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">in&nbsp;the&nbsp;input&nbsp;stream.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">IOException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;there&nbsp;is&nbsp;an&nbsp;I/O&nbsp;error.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">ClassNotFoundException&nbsp;if&nbsp;a&nbsp;serialized&nbsp;class&nbsp;is&nbsp;not&nbsp;defined&nbsp;on&nbsp;this&nbsp;system.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">readObject</font><font color="#000000">(</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">ObjectInputStream&nbsp;in</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">IOException,&nbsp;ClassNotFoundException</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">in.defaultReadObject</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">childs&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">Reference</font><font color="#000000">[</font><font color="#000000">getMaxChildCount</font><font color="#000000">()&nbsp;</font><font color="#000000">-&nbsp;</font><font color="#990000">1</font><font color="#000000">]</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for&nbsp;</b></font><font color="#000000">(</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">i&nbsp;=&nbsp;</font><font color="#990000">0</font><font color="#000000">;&nbsp;i&nbsp;&lt;&nbsp;childs.length;&nbsp;i++</font><font color="#000000">)</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">childs</font><font color="#000000">[</font><font color="#000000">i</font><font color="#000000">]&nbsp;</font><font color="#000000">=&nbsp;createReference</font><font color="#000000">(</font><font color="#7f0055"><b>null</b></font><font color="#000000">)</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#ffffff"></font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Creates&nbsp;and&nbsp;returns&nbsp;a&nbsp;copy&nbsp;of&nbsp;this&nbsp;object.&nbsp;&nbsp;The&nbsp;precise&nbsp;meaning&nbsp;of&nbsp;&#34;copy&#34;&nbsp;may&nbsp;depend&nbsp;on&nbsp;the&nbsp;class&nbsp;of&nbsp;the&nbsp;object.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;general&nbsp;intent&nbsp;is&nbsp;that,&nbsp;for&nbsp;any&nbsp;object&nbsp;&lt;tt&gt;x&lt;/tt&gt;,&nbsp;the&nbsp;expression:&nbsp;&lt;blockquote&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;pre&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;x.clone()&nbsp;!=&nbsp;x&lt;/pre&gt;&lt;/blockquote&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;will&nbsp;be&nbsp;true,&nbsp;and&nbsp;that&nbsp;the&nbsp;expression:&nbsp;&lt;blockquote&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;pre&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;x.clone().getClass()&nbsp;==&nbsp;x.getClass()&lt;/pre&gt;&lt;/blockquote&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;will&nbsp;be&nbsp;&lt;tt&gt;true&lt;/tt&gt;,&nbsp;but&nbsp;these&nbsp;are&nbsp;not&nbsp;absolute&nbsp;requirements.&nbsp;While&nbsp;it&nbsp;is&nbsp;typically&nbsp;the&nbsp;case&nbsp;that:&nbsp;&lt;blockquote&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;pre&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;x.clone().equals(x)&lt;/pre&gt;&lt;/blockquote&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;will&nbsp;be&nbsp;&lt;tt&gt;true&lt;/tt&gt;,&nbsp;this&nbsp;is&nbsp;not&nbsp;an&nbsp;absolute&nbsp;requirement.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;By&nbsp;convention,&nbsp;the&nbsp;returned&nbsp;object&nbsp;should&nbsp;be&nbsp;obtained&nbsp;by&nbsp;calling&nbsp;&lt;tt&gt;super.clone&lt;/tt&gt;.&nbsp;&nbsp;If&nbsp;a&nbsp;class&nbsp;and&nbsp;all&nbsp;of&nbsp;its</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;superclasses&nbsp;(except&nbsp;&lt;tt&gt;Object&lt;/tt&gt;)&nbsp;obey&nbsp;this&nbsp;convention,&nbsp;it&nbsp;will&nbsp;be&nbsp;the&nbsp;case&nbsp;that&nbsp;&lt;tt&gt;x.clone().getClass()&nbsp;==</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;x.getClass()&lt;/tt&gt;.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;By&nbsp;convention,&nbsp;the&nbsp;object&nbsp;returned&nbsp;by&nbsp;this&nbsp;method&nbsp;should&nbsp;be&nbsp;independent&nbsp;of&nbsp;this&nbsp;object&nbsp;(which&nbsp;is&nbsp;being&nbsp;cloned).&nbsp;&nbsp;To</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;achieve&nbsp;this&nbsp;independence,&nbsp;it&nbsp;may&nbsp;be&nbsp;necessary&nbsp;to&nbsp;modify&nbsp;one&nbsp;or&nbsp;more&nbsp;fields&nbsp;of&nbsp;the&nbsp;object&nbsp;returned&nbsp;by</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;tt&gt;super.clone&lt;/tt&gt;&nbsp;before&nbsp;returning&nbsp;it.&nbsp;&nbsp;Typically,&nbsp;this&nbsp;means&nbsp;copying&nbsp;any&nbsp;mutable&nbsp;objects&nbsp;that&nbsp;comprise&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;internal&nbsp;&#34;deep&nbsp;structure&#34;&nbsp;of&nbsp;the&nbsp;object&nbsp;being&nbsp;cloned&nbsp;and&nbsp;replacing&nbsp;the&nbsp;references&nbsp;to&nbsp;these&nbsp;objects&nbsp;with&nbsp;references</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;to&nbsp;the&nbsp;copies.&nbsp;&nbsp;If&nbsp;a&nbsp;class&nbsp;contains&nbsp;only&nbsp;primitive&nbsp;fields&nbsp;or&nbsp;references&nbsp;to&nbsp;immutable&nbsp;objects,&nbsp;then&nbsp;it&nbsp;is&nbsp;usually</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;the&nbsp;case&nbsp;that&nbsp;no&nbsp;fields&nbsp;in&nbsp;the&nbsp;object&nbsp;returned&nbsp;by&nbsp;&lt;tt&gt;super.clone&lt;/tt&gt;&nbsp;need&nbsp;to&nbsp;be&nbsp;modified.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;method&nbsp;&lt;tt&gt;clone&lt;/tt&gt;&nbsp;for&nbsp;class&nbsp;&lt;tt&gt;Object&lt;/tt&gt;&nbsp;performs&nbsp;a&nbsp;specific&nbsp;cloning&nbsp;operation.&nbsp;First,&nbsp;if&nbsp;the&nbsp;class&nbsp;of</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;this&nbsp;object&nbsp;does&nbsp;not&nbsp;implement&nbsp;the&nbsp;interface&nbsp;&lt;tt&gt;Cloneable&lt;/tt&gt;,&nbsp;then&nbsp;a&nbsp;&lt;tt&gt;CloneNotSupportedException&lt;/tt&gt;&nbsp;is</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;thrown.&nbsp;Note&nbsp;that&nbsp;all&nbsp;arrays&nbsp;are&nbsp;considered&nbsp;to&nbsp;implement&nbsp;the&nbsp;interface&nbsp;&lt;tt&gt;Cloneable&lt;/tt&gt;.&nbsp;Otherwise,&nbsp;this&nbsp;method</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;creates&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;class&nbsp;of&nbsp;this&nbsp;object&nbsp;and&nbsp;initializes&nbsp;all&nbsp;its&nbsp;fields&nbsp;with&nbsp;exactly&nbsp;the&nbsp;contents&nbsp;of&nbsp;the</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;corresponding&nbsp;fields&nbsp;of&nbsp;this&nbsp;object,&nbsp;as&nbsp;if&nbsp;by&nbsp;assignment;&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;fields&nbsp;are&nbsp;not&nbsp;themselves&nbsp;cloned.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Thus,&nbsp;this&nbsp;method&nbsp;performs&nbsp;a&nbsp;&#34;shallow&nbsp;copy&#34;&nbsp;of&nbsp;this&nbsp;object,&nbsp;not&nbsp;a&nbsp;&#34;deep&nbsp;copy&#34;&nbsp;operation.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&lt;p/&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;The&nbsp;class&nbsp;&lt;tt&gt;Object&lt;/tt&gt;&nbsp;does&nbsp;not&nbsp;itself&nbsp;implement&nbsp;the&nbsp;interface&nbsp;&lt;tt&gt;Cloneable&lt;/tt&gt;,&nbsp;so&nbsp;calling&nbsp;the&nbsp;&lt;tt&gt;clone&lt;/tt&gt;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;method&nbsp;on&nbsp;an&nbsp;object&nbsp;whose&nbsp;class&nbsp;is&nbsp;&lt;tt&gt;Object&lt;/tt&gt;&nbsp;will&nbsp;result&nbsp;in&nbsp;throwing&nbsp;an&nbsp;exception&nbsp;at&nbsp;run&nbsp;time.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">a&nbsp;clone&nbsp;of&nbsp;this&nbsp;instance.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@throws&nbsp;</font><font color="#3f5fbf">CloneNotSupportedException&nbsp;if&nbsp;the&nbsp;object's&nbsp;class&nbsp;does&nbsp;not&nbsp;support&nbsp;the&nbsp;&lt;code&gt;Cloneable&lt;/code&gt;&nbsp;interface.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses&nbsp;that&nbsp;override&nbsp;the&nbsp;&lt;code&gt;clone&lt;/code&gt;&nbsp;method&nbsp;can&nbsp;also&nbsp;throw&nbsp;this</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exception&nbsp;to&nbsp;indicate&nbsp;that&nbsp;an&nbsp;instance&nbsp;cannot&nbsp;be&nbsp;cloned.</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@see&nbsp;</font><font color="#3f5fbf">Cloneable</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#7f0055"><b>protected&nbsp;</b></font><font color="#000000">Object&nbsp;clone</font><font color="#000000">()</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>throws&nbsp;</b></font><font color="#000000">CloneNotSupportedException</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">{</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>final&nbsp;</b></font><font color="#000000">WeakReferenceList&nbsp;list&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">WeakReferenceList</font><font color="#000000">)&nbsp;</font><font color="#7f0055"><b>super</b></font><font color="#000000">.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">list.childs&nbsp;=&nbsp;</font><font color="#000000">(</font><font color="#000000">Reference</font><font color="#000000">[])&nbsp;</font><font color="#000000">childs.clone</font><font color="#000000">()</font><font color="#000000">;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">list;</font><br/>
<font color="#ffffff">&nbsp;&nbsp;</font><font color="#000000">}</font><br/>
<font color="#000000">}</font></code></div></td>   </tr>
</table>
</td></tr></table><div style='margin-left:10px;'><TABLE width="650"  border=0 cellSpacing=0 cellPadding=0 border=0><TBODY>
<TR><TD align=left><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></TD>
<td align=right><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc.html";google_color_text="000000";
//--></script><script type="text/javascript"src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script></td></TR></TBODY></TABLE></div><TABLE border=0><TR><TD height=20></TD></TR></TABLE>
<table cellpadding=0 cellspacing=0 width=800 border=0><tr><td colSpan=5>9.56.Reference</td></tr><tr class=odd><td width=20></td><td width=100>9.56.1.</td><td  align=left><A href="AnimplementationofSetthatmanagesamapofsoftreferencestothesetvalues.html">An implementation of Set that manages a map of soft references to the set values.</a></td></tr><tr class=even><td width=20></td><td width=100>9.56.2.</td><td  align=left><A href="CachebasedonSoftReference.html">Cache based on SoftReference</a></td></tr><tr class=odd><td width=20></td><td width=100>9.56.3.</td><td  align=left>WeakReference list uses java.lang.ref.WeakReferences to store its contents.</td></tr></table><TABLE border=0><TR><TD height=10></TD></TR></TABLE>
</td></tr></table></td></tr></table><center><TABLE border=0><TR align=left><TD><A href="http://www.techgeniussolutions.com/">techgeniussolutions.com</A>  &nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/contact.htm>Contact Us</A>&nbsp;|&nbsp;<A href=http://www.techgeniussolutions.com/html/ad.htm>Privacy Policy</A></Td></TR><TR align=left><TD class=Templatetext>Copyright 2009 - 12 Demo Source and Support. All rights reserved.</TD></TR><TR align=left><TD>All other trademarks are property of their respective owners.</TD></TR></TABLE></center></BODY>
<!-- Mirrored from www.techgeniussolutions.com/Tutorial/Java/0140__Collections/WeakReferencelistusesjavalangrefWeakReferencestostoreitscontents.htm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 21 Sep 2013 18:55:52 GMT -->
</HTML>